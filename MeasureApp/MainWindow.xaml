<Window x:Class="MeasureApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:MeasureApp" xmlns:viewmodel="clr-namespace:MeasureApp.ViewModel" d:DataContext="{d:DesignInstance Type=viewmodel:MainWindowDataContext}"
        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        mc:Ignorable="d"
        Title="MainWindow" Height="504.4" Width="866.4">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <viewmodel:EventCommandBase Command="{Binding MainWindowClosedEvent}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <viewmodel:M3458ASyncMeasureButtonContentConverter x:Key="M3458ASyncMeasureButtonContentConverter"/>
        <viewmodel:SerialPortsStatusTextConverter x:Key="SerialPortsStatusTextConverter"/>

        <local:SerialPortRecvDataTypeToBoolConverter x:Key="SerialPortRecvDataTypeToBoolConverter"/>
        <local:SerialPortRecvDataEncodeToBoolConverter x:Key="SerialPortRecvDataEncodeToBoolConverter"/>
        <local:SerialPortRecvDataType x:Key="SerialPortRecvDataType"/>
    </Window.Resources>
    <DockPanel>
        <Grid>
            <StatusBar DockPanel.Dock="Bottom" MaxHeight="20" VerticalAlignment="Bottom">
                <TextBlock Text="{Binding StatusBarText}"></TextBlock>
            </StatusBar>
            <TabControl Margin="10,10,9.6,24.8">
                <TabItem Header="设备连接调试">
                    <Grid>
                        <GroupBox Header="GPIB设备发现" HorizontalAlignment="Left" Height="166" Margin="10,10,0,0" VerticalAlignment="Top" Width="407">
                            <Grid>
                                <Button x:Name="SearchGPIBDevicesButton" Content="搜索GPIB设备" HorizontalAlignment="Left" Margin="227,83,0,0" VerticalAlignment="Top" Width="158" Height="23">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding GpibDeviceSearchEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button x:Name="OpenGPIBDeviceButton" Content="打开GPIB设备" HorizontalAlignment="Left" Margin="227,111,0,0" VerticalAlignment="Top" Width="158" Height="23">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding GpibDeviceOpenEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <ComboBox x:Name="GpibDeviceComboBox" ItemsSource="{Binding GpibDevicesName}" SelectedValue="{Binding GpibDevicesSelectedName}" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="201" Height="23"/>
                                <TextBlock x:Name="DeviceNameLabel" Text="{Binding GpibDeviceConnectStatusText}" HorizontalAlignment="Left" Margin="227,10,0,0" VerticalAlignment="Top" Width="158" Height="68"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="串口设备发现" HorizontalAlignment="Left" Height="166" Margin="422,10,0,0" VerticalAlignment="Top" Width="407">
                            <Grid>
                                <Button x:Name="SearchSerialPortButton" Content="搜索串口设备" Margin="231,0,10,0" VerticalAlignment="Center" Height="23">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialPortDeviceSearchEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button x:Name="OpenSerialPortButton" Content="打开串口设备" Margin="231,88,10,0" VerticalAlignment="Top" Height="23">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialPortDeviceOpenEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button x:Name="CloseSerialPortButton" Content="关闭串口设备" Margin="231,116,10,0" VerticalAlignment="Top" Height="23">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialPortDeviceCloseEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <ComboBox x:Name="SerialPortNameComboBox" ItemsSource="{Binding SerialportDevicesNameComboBoxItems}" SelectedValue="{Binding SerialportDevicesNameSelectedValue}" SelectedValuePath="Tag" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="201" Height="23"/>
                                <TextBlock Text="波特率：" HorizontalAlignment="Left" Margin="10,41,0,0" Width="71" TextWrapping="Wrap" Height="18" VerticalAlignment="Top"/>
                                <ComboBox x:Name="SerialPortBaudRateComboBox" SelectedValue="{Binding SerialportDeviceBaudRateSelectedValue}" SelectedValuePath="Tag" HorizontalAlignment="Left" Margin="86,38,0,0" VerticalAlignment="Top" Width="125" Height="23">
                                    <ComboBoxItem Content="9600" Tag="9600"/>
                                    <ComboBoxItem Content="38400" Tag="38400"/>
                                    <ComboBoxItem Content="115200" Tag="115200"/>
                                    <ComboBoxItem Content="921600" Tag="921600"/>
                                    <ComboBoxItem Tag="{Binding ElementName=SerialportDeviceCustomBaudRateTextBox, Path=Text}">
                                        <TextBox Name="SerialportDeviceCustomBaudRateTextBox" Margin="0,0,20,0" Width="80">
                                            <TextBox.Resources>
                                                <VisualBrush x:Key="HintText" TileMode="None" Opacity="0.5" Stretch="None" AlignmentX="Left">
                                                    <VisualBrush.Visual>
                                                        <TextBlock FontStyle="Italic" Text="自定义波特率"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </TextBox.Resources>
                                            <TextBox.Style>
                                                <Style TargetType="{x:Type TextBox}">
                                                    <Style.Triggers>
                                                        <Trigger Property="Text" Value="{x:Null}">
                                                            <Setter Property="Background" Value="{StaticResource HintText}"/>
                                                        </Trigger>
                                                        <Trigger Property="Text" Value="">
                                                            <Setter Property="Background" Value="{StaticResource HintText}"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Style>
                                        </TextBox>
                                    </ComboBoxItem>
                                </ComboBox>
                                <TextBlock Text="校验位：" HorizontalAlignment="Left" Margin="10,67,0,0" Width="71" TextWrapping="Wrap" Height="18" VerticalAlignment="Top"/>
                                <ComboBox ItemsSource="{Binding SerialportDeviceParityList}" SelectedItem="{Binding SerialportDeviceParitySelectItem}" HorizontalAlignment="Left" Margin="86,64,0,0" VerticalAlignment="Top" Width="125" Height="23"/>
                                <TextBlock Text="数据位：" HorizontalAlignment="Left" Margin="10,92,0,0" Width="71" TextWrapping="Wrap" Height="18" VerticalAlignment="Top"/>
                                <ComboBox ItemsSource="{Binding SerialportDeviceDataBitsList}" SelectedItem="{Binding SerialportDeviceDataBitsSelectItem}" HorizontalAlignment="Left" Margin="86,90,0,0" VerticalAlignment="Top" Width="125" Height="23"/>
                                <TextBlock Text="停止位：" HorizontalAlignment="Left" Margin="10,121,0,0" Width="71" TextWrapping="Wrap" Height="18" VerticalAlignment="Top"/>
                                <ComboBox ItemsSource="{Binding SerialportDeviceStopBitsList}" SelectedItem="{Binding SerialportDeviceStopBitsSelectItem}" HorizontalAlignment="Left" Margin="86,118,0,0" VerticalAlignment="Top" Width="125" Height="23"/>
                                <TextBlock x:Name="SerialPortDeviceNameTextBlock" Text="{Binding SerialPortsInstance.SerialPortsDict.Values, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource SerialPortsStatusTextConverter}}" HorizontalAlignment="Left" Margin="231,10,0,0" Width="154" TextWrapping="Wrap" Height="45" VerticalAlignment="Top"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="GPIB调试" HorizontalAlignment="Left" Margin="10,181,0,10" Width="407">
                            <Grid>
                                <TextBlock Text="Write Command" HorizontalAlignment="Left" Margin="10,41,0,0" VerticalAlignment="Top" Width="201"/>
                                <TextBlock Text="Read Data" HorizontalAlignment="Left" Margin="10,117,0,0" VerticalAlignment="Top" Width="201"/>
                                <TextBox x:Name="WriteCmdTextBox" Text="{Binding GPIBDebugWriteCommandText}" HorizontalAlignment="Left" Height="51" Margin="10,61,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="201"/>
                                <TextBox x:Name="ReadCmdTextBox" Text="{Binding GPIBDebugReadCommandText}" HorizontalAlignment="Left" Height="51" Margin="10,138,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="201"/>
                                <Button x:Name="QueryCmdButton" Content="Query" HorizontalAlignment="Left" Margin="227,61,0,0" VerticalAlignment="Top" Width="158" Height="51">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding GPIBDebugCommandEvent}" CommandParameter="Query"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button x:Name="WriteCmdButton" Content="Write" HorizontalAlignment="Left" Margin="227,137,0,0" VerticalAlignment="Top" Width="158" Height="23">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding GPIBDebugCommandEvent}" CommandParameter="Write"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button x:Name="ReadCmdButton" Content="Read" HorizontalAlignment="Left" Margin="227,165,0,0" VerticalAlignment="Top" Width="158" Height="23">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding GPIBDebugCommandEvent}" CommandParameter="Read"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="串口调试" HorizontalAlignment="Left" Margin="422,181,0,10" Width="407">
                            <Grid>
                                <ComboBox x:Name="SerialPortDebugSelectComboBox" ItemsSource="{Binding SerialPortsInstance.SerialPortsDict, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Key" SelectedValue="{Binding SerialportDebugPortNameSelectedValue, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" HorizontalAlignment="Left" Margin="288,16,0,0" VerticalAlignment="Top" Width="97" Height="23"/>
                                <Button x:Name="SerialPortWriteCmdButton" Content="Write" HorizontalAlignment="Left" Margin="227,61,0,0" VerticalAlignment="Top" Width="158" Height="51">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialPortDebugWriteCmdEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button x:Name="SerialPortReadCmdButton" Content="Read" HorizontalAlignment="Left" Margin="227,137,0,0" VerticalAlignment="Top" Width="158" Height="51">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialPortDebugReadCmdEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <TextBox x:Name="SerialPortWriteCmdTextBox" Text="{Binding SerialPortDebugWriteCommandText}" HorizontalAlignment="Left" Height="51" Margin="10,61,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="201"/>
                                <TextBox x:Name="SerialPortReadCmdTextBox" Text="{Binding SerialPortDebugReadCommandText}" HorizontalAlignment="Left" Height="51" Margin="10,138,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="201"/>
                                <TextBlock Text="Write Command" HorizontalAlignment="Left" Margin="10,41,0,0" VerticalAlignment="Top" Width="201"/>
                                <TextBlock Text="Read Data" HorizontalAlignment="Left" Margin="10,117,0,0" VerticalAlignment="Top" Width="201"/>
                                <TextBlock Text="串口选择" HorizontalAlignment="Left" Margin="227,21,0,0" VerticalAlignment="Top" Width="56"/>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </TabItem>
                <TabItem Header="3458A万用表控制">
                    <Grid>
                        <GroupBox Header="基本" Height="350" Margin="10,10,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="329">
                            <Grid>
                                <Button Tag="RESET" Content="复位" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="80">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="RESET"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Tag="ID" Content="ID" HorizontalAlignment="Left" Margin="10,33,0,0" VerticalAlignment="Top" Width="80">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="ID"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Tag="ERR" Content="错误信息" HorizontalAlignment="Left" Margin="107,10,0,0" VerticalAlignment="Top" Width="80">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="ERR"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Tag="STB" Content="状态位" HorizontalAlignment="Left" Margin="107,33,0,0" VerticalAlignment="Top" Width="80">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="STB"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Tag="TEMP" Content="机器温度" HorizontalAlignment="Left" Margin="207,10,0,0" VerticalAlignment="Top" Width="80">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="TEMP"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Tag="LINE" Content="工频频率" HorizontalAlignment="Left" Margin="207,33,0,0" VerticalAlignment="Top" Width="80">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="LINE"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <ComboBox Name="NdigComboBox" ItemsSource="{Binding M3458ANdigComboBoxItems}" SelectedValue="{Binding M3458ANdigSelectedValue}" SelectedValuePath="Tag" Margin="107,66,0,0" Width="80" HorizontalAlignment="Left" Height="20" VerticalAlignment="Top"/>
                                <Button Tag="NDIG" Content="显示位数" HorizontalAlignment="Left" Margin="207,66,0,0" VerticalAlignment="Top" Width="80">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="NDIG"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>

                                <ComboBox Name="AcalComboBox" ItemsSource="{Binding M3458AAcalComboBoxItems}" SelectedValue="{Binding M3458AAcalSelectedValue}" SelectedValuePath="Tag" HorizontalAlignment="Left" Margin="10,110,0,0" VerticalAlignment="Top" Width="163" Height="22"/>
                                <Button Tag="ACAL" Content="执行自动校准" HorizontalAlignment="Left" Margin="178,110,0,0" VerticalAlignment="Top" Width="130" Height="22">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="ACAL"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <ComboBox Name="RangeComboBox" ItemsSource="{Binding M3458ASetRangeComboBoxItems}" SelectedValue="{Binding M3458ASetRangeSelectedValue}" SelectedValuePath="Tag" HorizontalAlignment="Left" Margin="10,146,0,0" VerticalAlignment="Top" Width="79" Height="22"/>
                                <ComboBox Name="ResComboBox" ItemsSource="{Binding M3458ASetResolutionComboBoxItems}" SelectedValue="{Binding M3458ASetResolutionSelectedValue}" SelectedValuePath="Tag" HorizontalAlignment="Left" Margin="94,146,0,0" VerticalAlignment="Top" Width="79" Height="22"/>
                                <Button Tag="RANGE" Content="设置量程/精度" HorizontalAlignment="Left" Margin="178,146,0,0" VerticalAlignment="Top" Width="130" Height="22">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="RANGE"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <TextBox Name="NplcTextBox" Text="{Binding M3458ASetNplcText}" HorizontalAlignment="Left" Height="23" Margin="10,183,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="163"/>
                                <Button Tag="NPLC" Content="设置速率(NPLC)" HorizontalAlignment="Left" Margin="178,183,0,0" VerticalAlignment="Top" Width="130" Height="22">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="NPLC"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Tag="RANGE?" Content="读量程/精度" HorizontalAlignment="Left" Margin="16,220,0,0" VerticalAlignment="Top" Width="130" Height="22">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="RANGE?"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Tag="NPLC?" Content="读输出速率(NPLC)" HorizontalAlignment="Left" Margin="170,220,0,0" VerticalAlignment="Top" Width="130" Height="22">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="NPLC?"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <TextBox Name="GuiConfigLogTextBox" Margin="10,257,9.8,10" TextWrapping="Wrap" Text="{Binding M3458ABasicConfigCommandLogText}"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="测量" HorizontalAlignment="Left" Margin="344,10,0,0" Width="405" Height="350" VerticalAlignment="Top">
                            <Grid>
                                <Border VerticalAlignment="Top" Margin="10,10,10,0" Height="130" BorderBrush="Gray" BorderThickness="0.5" CornerRadius="3">
                                    <Grid>
                                        <TextBlock Text="自动测量电压" Margin="10,10,10,0" VerticalAlignment="Top"/>
                                        <TextBlock x:Name="SyncDCVDisplayTextBlock" Text="{Binding M3458ASyncMeasureText}" TextWrapping="Wrap" Margin="10,42,159,0" TextAlignment="Center" VerticalAlignment="Top" FontSize="24" Height="34"/>
                                        <Button x:Name="SyncDCVDisplayButton" Content="{Binding M3458AIsSyncMeasureOpen, Converter={StaticResource M3458ASyncMeasureButtonContentConverter}}" HorizontalAlignment="Left" Margin="218,30,0,0" VerticalAlignment="Top" Width="145" Height="57">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <viewmodel:EventCommandBase Command="{Binding M3458ASyncMeasureEvent}" CommandParameter="{Binding ElementName=SyncDCVDisplayStorageCheckBox, Path=IsChecked}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                        <CheckBox Name="SyncDCVDisplayStorageCheckBox" Content="自动存储" HorizontalAlignment="Left" Margin="218,92,0,0" VerticalAlignment="Top"/>
                                    </Grid>
                                </Border>

                                <Border VerticalAlignment="Top" Margin="10,145,10,0" Height="173" BorderBrush="Gray" BorderThickness="0.5" CornerRadius="3">
                                    <Grid>
                                        <TextBlock Text="手动测量电压" Margin="10,10,10,0" VerticalAlignment="Top"/>
                                        <TextBlock Text="速度选择:" Margin="10,43,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="71"/>
                                        <Button x:Name="SetMinNPLCButton" Content="高速度(0 NPLC)" Height="22" Margin="86,40,0,0" HorizontalAlignment="Left" Width="130" VerticalAlignment="Top">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <viewmodel:EventCommandBase Command="{Binding M3458ASetNPLCEvent}" CommandParameter="0"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                        <Button x:Name="SetMaxNPLCButton" Content="高精度(100 NPLC)" Height="22" Margin="221,40,0,0" HorizontalAlignment="Left" Width="130" VerticalAlignment="Top">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <viewmodel:EventCommandBase Command="{Binding M3458ASetNPLCEvent}" CommandParameter="100"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                        <TextBlock Text="量程选择:" Margin="10,70,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="71"/>
                                        <ComboBox x:Name="ManualReadDCVRangeComboBox" ItemsSource="{Binding M3458ASetRangeComboBoxItems}" SelectedValue="{Binding M3458AManualMeasureRangeSelectedValue}" SelectedValuePath="Tag" HorizontalAlignment="Left" Margin="86,67,0,0" VerticalAlignment="Top" Width="79" Height="22"/>
                                        <ComboBox x:Name="ManualReadDCVResComboBox" ItemsSource="{Binding M3458ASetResolutionComboBoxItems}" SelectedValue="{Binding M3458AManualMeasureResolutionSelectedValue}" SelectedValuePath="Tag" HorizontalAlignment="Left" Margin="170,67,0,0" VerticalAlignment="Top" Width="79" Height="22"/>
                                        <TextBlock x:Name="ManualReadDCVTextBlock" Text="{Binding M3458AManualMeasureText}" TextWrapping="Wrap" Margin="10,98,159,0" TextAlignment="Center" VerticalAlignment="Top" FontSize="24" Height="34"/>
                                        <Button x:Name="ManualReadDCVButton" Content="手动读取电压" HorizontalAlignment="Left" Margin="218,94,0,0" VerticalAlignment="Top" Width="144" Height="41">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <viewmodel:EventCommandBase Command="{Binding M3458AManualMeasureEvent}" CommandParameter="{Binding ElementName=ManualStorageDCVCheckBox, Path=IsChecked}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                        <CheckBox Name="ManualStorageDCVCheckBox" Content="自动存储" HorizontalAlignment="Left" Margin="218,140,0,0" VerticalAlignment="Top"/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </TabItem>
                <TabItem Header="串口指令通信">
                    <Grid>
                        <ComboBox x:Name="SerialPortCommandSerialPortSelectComboBox" ItemsSource="{Binding SerialPortsInstance.SerialPortsDict, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Key" SelectedValue="{Binding SerialportCommandPortNameSelectedValue, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" HorizontalAlignment="Left" Margin="88,10,0,0" VerticalAlignment="Top" Width="97" Height="23"/>
                        <Button Margin="365,10,0,0" HorizontalAlignment="Left" Width="106" Height="23" VerticalAlignment="Top"/>
                        <Button Margin="476,10,0,0" HorizontalAlignment="Left" Width="106" Height="23" VerticalAlignment="Top"/>
                        <Border BorderBrush="Gray" BorderThickness="1.5" Margin="10,45,0,0" Height="200" Width="350" VerticalAlignment="Top" HorizontalAlignment="Left">
                            <Grid ShowGridLines="True" Name="gridview">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="1*"/>
                                    <ColumnDefinition Width="1*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="1*"/>
                                </Grid.RowDefinitions>
                                <!--TODO-->
                                <TextBlock Margin="5,5,5,5" Text="{Binding SerialportCommandModels[0].CommandInfo}" Grid.Row="0" Grid.Column="0"/>
                                <TextBox Margin="5,5,5,5" Text="{Binding SerialportCommandModels[0].ParamTexts[0]}" Grid.Row="0" Grid.Column="1"/>
                                <Button Margin="5,5,5,5" Content="{Binding SerialportCommandModels[0].CommandText}" Grid.Row="0" Grid.Column="4">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialportCommandSendEvent}" CommandParameter="0"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <TextBlock Margin="5,5,5,5" Text="{Binding SerialportCommandModels[1].CommandInfo}" Grid.Row="1" Grid.Column="0"/>
                                <Button Margin="5,5,5,5" Content="{Binding SerialportCommandModels[1].CommandText}" Grid.Row="1" Grid.Column="4">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialportCommandSendEvent}" CommandParameter="1"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <TextBlock Margin="5,5,5,5" Text="{Binding SerialportCommandModels[2].CommandInfo}" Grid.Row="2" Grid.Column="0"/>
                                <TextBox Margin="5,5,5,5" Text="{Binding SerialportCommandModels[2].ParamTexts[0]}" Grid.Row="2" Grid.Column="1"/>
                                <TextBox Margin="5,5,5,5" Text="{Binding SerialportCommandModels[2].ParamTexts[1]}" Grid.Row="2" Grid.Column="2"/>
                                <Button Margin="5,5,5,5" Content="{Binding SerialportCommandModels[2].CommandText}" Grid.Row="2" Grid.Column="4">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialportCommandSendEvent}" CommandParameter="2"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <TextBlock Margin="5,5,5,5" Text="{Binding SerialportCommandModels[3].CommandInfo}" Grid.Row="3" Grid.Column="0"/>
                                <TextBox Margin="5,5,5,5" Text="{Binding SerialportCommandModels[3].ParamTexts[0]}" Grid.Row="3" Grid.Column="1"/>
                                <Button Margin="5,5,5,5" Content="{Binding SerialportCommandModels[3].CommandText}" Grid.Row="3" Grid.Column="4">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialportCommandSendEvent}" CommandParameter="3"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <TextBlock Margin="5,5,5,5" Text="{Binding SerialportCommandModels[4].CommandInfo}" Grid.Row="4" Grid.Column="0"/>
                                <TextBox Margin="5,5,5,5" Text="{Binding SerialportCommandModels[4].ParamTexts[0]}" Grid.Row="4" Grid.Column="1"/>
                                <TextBox Margin="5,5,5,5" Text="{Binding SerialportCommandModels[4].ParamTexts[1]}" Grid.Row="4" Grid.Column="2"/>
                                <TextBox Margin="5,5,5,5" Text="{Binding SerialportCommandModels[4].ParamTexts[2]}" Grid.Row="4" Grid.Column="3"/>
                                <Button Margin="5,5,5,5" Content="{Binding SerialportCommandModels[4].CommandText}" Grid.Row="4" Grid.Column="4">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialportCommandSendEvent}" CommandParameter="4"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <TextBlock Margin="5,5,5,5" Text="{Binding SerialportCommandModels[5].CommandInfo}" Grid.Row="5" Grid.Column="0"/>
                                <TextBox Margin="5,5,5,5" Text="{Binding SerialportCommandModels[5].ParamTexts[0]}" Grid.Row="5" Grid.Column="1"/>
                                <TextBox Margin="5,5,5,5" Text="{Binding SerialportCommandModels[5].ParamTexts[1]}" Grid.Row="5" Grid.Column="2"/>
                                <Button Margin="5,5,5,5" Content="{Binding SerialportCommandModels[5].CommandText}" Grid.Row="5" Grid.Column="4">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialportCommandSendEvent}" CommandParameter="5"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </Grid>
                        </Border>
                        <TextBox Margin="365,45,10,0" Text="{Binding CommandLog}" AcceptsReturn="True" TextWrapping="Wrap" VerticalAlignment="Top" Height="164"/>
                    </Grid>
                </TabItem>
                <TabItem Header="串口数据通信">
                    <Grid>
                        <GroupBox Header="传输" HorizontalAlignment="Left" Margin="10,10,0,0" Width="460" Height="392" VerticalAlignment="Top">
                            <Grid>
                                <TextBlock Text="发送:" HorizontalAlignment="Left" Margin="10,23,0,0" VerticalAlignment="Top" Width="33"/>
                                <ComboBox x:Name="SerialPortSendCmdSerialPortNameComboBox" ItemsSource="{Binding SerialPortsInstance.SerialPortsDict, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Key" SelectedValue="{Binding SerialPortSendCmdSerialPortNameSelectedValue, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" HorizontalAlignment="Left" Margin="48,19,0,0" VerticalAlignment="Top" Width="120" Height="23">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <viewmodel:EventCommandBase Command="{Binding SerialPortSendCmdChangedEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ComboBox>
                                <TextBlock Text="::" HorizontalAlignment="Left" Margin="173,23,0,0" VerticalAlignment="Top" Width="7"/>
                                <ComboBox x:Name="SerialPortSendCmdCommandNameComboBox" SelectedValue="{Binding SerialportSendCmdCommandNameSelectedValue, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Tag" HorizontalAlignment="Left" Margin="185,19,0,0" VerticalAlignment="Top" Width="120" Height="23">
                                    <ComboBoxItem Content="SET" Tag="SET"/>
                                    <ComboBoxItem Content="GET" Tag="GET"/>
                                    <ComboBoxItem Content="START" Tag="START"/>
                                    <ComboBoxItem Content="END" Tag="END"/>
                                    <ComboBoxItem Tag="Others" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                                        <TextBox Name="SerialPortSendCmdCommandNameManualTextBox" Margin="0,0,20,0" Width="80" Text="{Binding SerialPortSendCmdCommandNameManualText, UpdateSourceTrigger=PropertyChanged}" Foreground="{Binding SerialPortSendCmdCommandNameManualTextBoxForeGround}">
                                            <TextBox.Resources>
                                                <VisualBrush x:Key="HintText"  TileMode="None" Opacity="0.5" Stretch="None" AlignmentX="Left">
                                                    <VisualBrush.Visual>
                                                        <TextBlock FontStyle="Italic" Text="自定义命令"/>
                                                    </VisualBrush.Visual>
                                                </VisualBrush>
                                            </TextBox.Resources>
                                            <TextBox.Style>
                                                <Style TargetType="{x:Type TextBox}">
                                                    <Style.Triggers>
                                                        <Trigger Property="Text" Value="{x:Null}">
                                                            <Setter Property="Background" Value="{StaticResource HintText}"/>
                                                        </Trigger>
                                                        <Trigger Property="Text" Value="">
                                                            <Setter Property="Background" Value="{StaticResource HintText}"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBox.Style>
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="TextChanged">
                                                    <viewmodel:EventCommandBase Command="{Binding SerialPortSendCmdChangedEvent}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </TextBox>
                                    </ComboBoxItem>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <viewmodel:EventCommandBase Command="{Binding SerialPortSendCmdChangedEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ComboBox>
                                <TextBlock Text=";" HorizontalAlignment="Left" Margin="310,23,0,0" VerticalAlignment="Top" Width="7"/>
                                <TextBox Name="SerialPortSendCmdParamsTextBox" Text="{Binding SerialPortSendCmdParamsText, UpdateSourceTrigger=PropertyChanged}" Foreground="{Binding SerialPortSendCmdParamsTextBoxForeGround}" Margin="48,47,0,0" TextWrapping="Wrap" Height="22" VerticalAlignment="Top" HorizontalAlignment="Left" Width="257">
                                    <TextBox.Resources>
                                        <VisualBrush x:Key="HintText"  TileMode="None" Opacity="0.5" Stretch="None" AlignmentX="Left">
                                            <VisualBrush.Visual>
                                                <TextBlock FontStyle="Italic" Text="自定义参数，可用&quot; ,.;|&amp;&quot;分隔多个参数"/>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </TextBox.Resources>
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Style.Triggers>
                                                <Trigger Property="Text" Value="{x:Null}">
                                                    <Setter Property="Background" Value="{StaticResource HintText}"/>
                                                </Trigger>
                                                <Trigger Property="Text" Value="">
                                                    <Setter Property="Background" Value="{StaticResource HintText}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="TextChanged">
                                            <viewmodel:EventCommandBase Command="{Binding SerialPortSendCmdChangedEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>
                                <TextBlock Text=";" HorizontalAlignment="Left" Margin="310,51,0,0" VerticalAlignment="Top" Width="7"/>
                                <TextBlock Text="预览:" HorizontalAlignment="Left" Margin="10,79,0,0" VerticalAlignment="Top" Width="33"/>
                                <TextBlock Name="SerialPortSendCmdPreviewTextBlock" Text="{Binding SerialPortSendCmdPreviewText}" HorizontalAlignment="Left" Margin="48,79,0,0" VerticalAlignment="Top" Width="269"/>
                                <Button Name="SerialPortSendCmdButton" Content="发送命令" HorizontalAlignment="Left" Margin="328,19,0,0" VerticalAlignment="Top" Width="110" Height="75">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialPortSendCmdEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <TextBlock Text="接收:" HorizontalAlignment="Left" Margin="10,120,0,0" VerticalAlignment="Top" Width="33"/>
                                <GroupBox Header="数据类型" HorizontalAlignment="Left" Height="81" Margin="48,122,0,0" VerticalAlignment="Top" Width="390">
                                    <Grid Name="SerialPortRecvDataTypesGrid" DataContext="{Binding Source={StaticResource SerialPortRecvDataType}}">
                                        <RadioButton Content="Ascii" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" GroupName="SerialPortRecvDataEncodeGroupName" IsChecked="{Binding SerialPortRecvDataEncodeEnum, Converter={StaticResource SerialPortRecvDataEncodeToBoolConverter}, ConverterParameter=0}"/>
                                        <RadioButton Name="SerialPortRecvDataTypeIsBytesRadioButton" Content="Bytes" HorizontalAlignment="Left" Margin="10,34,0,0" VerticalAlignment="Top" GroupName="SerialPortRecvDataEncodeGroupName" IsChecked="{Binding SerialPortRecvDataEncodeEnum, Converter={StaticResource SerialPortRecvDataEncodeToBoolConverter}, ConverterParameter=1}"/>

                                        <RadioButton Content="Char" HorizontalAlignment="Left" Margin="110,10,0,0" VerticalAlignment="Top" GroupName="SerialPortRecvDataTypeGroupName" IsChecked="{Binding SerialPortRecvDataTypeEnum, Converter={StaticResource SerialPortRecvDataTypeToBoolConverter}, ConverterParameter=0}"/>
                                        <RadioButton Content="UInt8" HorizontalAlignment="Left" Margin="174,10,0,0" VerticalAlignment="Top" GroupName="SerialPortRecvDataTypeGroupName" IsChecked="{Binding SerialPortRecvDataTypeEnum, Converter={StaticResource SerialPortRecvDataTypeToBoolConverter}, ConverterParameter=1}"/>
                                        <RadioButton Content="UInt16" HorizontalAlignment="Left" Margin="241,10,0,0" VerticalAlignment="Top" GroupName="SerialPortRecvDataTypeGroupName" IsChecked="{Binding SerialPortRecvDataTypeEnum, Converter={StaticResource SerialPortRecvDataTypeToBoolConverter}, ConverterParameter=2}"/>
                                        <RadioButton Content="UInt32" HorizontalAlignment="Left" Margin="313,10,0,0" VerticalAlignment="Top" GroupName="SerialPortRecvDataTypeGroupName" IsChecked="{Binding SerialPortRecvDataTypeEnum, Converter={StaticResource SerialPortRecvDataTypeToBoolConverter}, ConverterParameter=3}"/>
                                        <CheckBox Name="SerialPortRecvDataTypeIsArrayCheckBox" Content="Array&lt;T&gt;.Count:" HorizontalAlignment="Left" Margin="110,34,0,0" VerticalAlignment="Top" IsChecked="{Binding IsArray}" IsEnabled="{Binding ElementName=SerialPortRecvDataTypeIsBytesRadioButton, Path=IsChecked}"/>
                                        <TextBox HorizontalAlignment="Left" Height="19" Margin="229,32,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="142" IsEnabled="{Binding ElementName=SerialPortRecvDataTypeIsArrayCheckBox, Path=IsChecked}" Text="{Binding ArrayCount}"/>
                                    </Grid>
                                </GroupBox>
                                <Button Name="SerialPortRecvDataButton" Content="接收数据" HorizontalAlignment="Left" Margin="195,208,0,0" VerticalAlignment="Top" Width="110" Height="32" Click="SerialPortRecvDataButton_Click"/>
                                <Button Name="SerialPortRecvDataStorageButton" Content="存储数据" HorizontalAlignment="Left" Margin="328,208,0,0" VerticalAlignment="Top" Width="110" Height="32" Click="SerialPortRecvDataStorageButton_Click"/>
                                <TextBox Name="SerialPortRecvDataDisplayTextBox" HorizontalAlignment="Left" Height="115" Margin="48,245,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="390"/>
                                <ComboBox x:Name="SerialPortRecvDataSerialPortNameComboBox" ItemsSource="{Binding SerialPortsInstance.SerialPortsDict, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Key" SelectedValue="{Binding SerialPortRecvDataSerialPortNameSelectedValue, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" HorizontalAlignment="Left" Margin="48,212,0,0" VerticalAlignment="Top" Width="120" Height="23"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="存储" HorizontalAlignment="Left" Height="392" Margin="475,10,0,0" VerticalAlignment="Top" Width="350">
                            <DataGrid Name="SerialPortRecvDataStorageDataGrid" ItemsSource="{Binding SerialPortStorageDataGridBinding}" AutoGenerateColumns="False" IsReadOnly="True" Height="355" Margin="5,0,5.4,4.6" VerticalAlignment="Bottom">
                                <DataGrid.Columns>
                                    <DataGridTextColumn CanUserSort="False" Width="1*" Header="数据" Binding="{Binding StringData}"/>
                                </DataGrid.Columns>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="LoadingRow">
                                        <viewmodel:EventCommandBase Command="{Binding DataGridLoadingRowAddRowIndexEvent}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </DataGrid>
                        </GroupBox>
                    </Grid>
                </TabItem>
                <TabItem Header="数据存储">
                    <Grid>
                        <GroupBox Header="存储" Margin="10,10,10.2,10">
                            <Grid>
                                <TextBlock Text="选择数据源：" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="230"/>
                                <ListBox Name="DataStorageSelectListBox" ItemsSource="{Binding DataStorageInstance.DataStorageDictionary.Keys}" SelectedValue="{Binding DataStorageSelectedValue}" HorizontalAlignment="Left" Height="106" Margin="10,30,0,0" VerticalAlignment="Top" Width="230">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <viewmodel:EventCommandBase Command="{Binding DataStorageSelectionChangedEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ListBox>
                                <DataGrid Name="DataStorageDataGrid" ItemsSource="{Binding DataStorageDataGridBinding}" AutoGenerateColumns="False" IsReadOnly="True" Margin="245,25,6,5">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn CanUserSort="False" Width="1*" Header="数据" Binding="{Binding StringData}"/>
                                    </DataGrid.Columns>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="LoadingRow">
                                            <viewmodel:EventCommandBase Command="{Binding DataGridLoadingRowAddRowIndexEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </DataGrid>
                                <Button Name="DataStorageExportListDataButton" Content="导出该数据" HorizontalAlignment="Left" Margin="10,141,0,0" VerticalAlignment="Top" Width="107" Height="32">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding DataStorageStoreEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Name="DataStorageClearListDataButton" Content="清空该数据" HorizontalAlignment="Left" Margin="133,141,0,0" VerticalAlignment="Top" Width="107" Height="32">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding DataStorageDeleteEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </TabItem>
                <TabItem Header="自动化脚本">
                    <Grid>
                        <GroupBox Header="自动化脚本" Margin="10,10,10.2,10">
                            <Grid>
                                <Border Margin="156,10,10,10" BorderBrush="Gray" BorderThickness="1.5">
                                    <local:BindableAvalonEditor Text="{Binding AutomationCodeEditorText}" SyntaxHighlighting="C#" ShowLineNumbers="True" FontFamily="Consolas" FontSize="10pt"/>
                                </Border>
                                <Button Content="加载" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Height="30" Width="68">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding AutomationCodeLoadFileEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Content="保存" HorizontalAlignment="Left" Margin="83,10,0,0" VerticalAlignment="Top" Height="30" Width="68">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding AutomationCodeSaveFileEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Content="运行" HorizontalAlignment="Left" Margin="10,45,0,0" VerticalAlignment="Top" Height="30" Width="141">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding AutomationCodeRunEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Label Content="返回值" HorizontalAlignment="Left" Margin="8,115,0,0" VerticalAlignment="Top"/>
                                <TextBox Text="{Binding AutomationCodeReturnData}" HorizontalAlignment="Left" Margin="10,145,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="141" Height="38"/>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>
    </DockPanel>
</Window>
