<Window x:Class="MeasureApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:MeasureApp"
        xmlns:viewmodel="clr-namespace:MeasureApp.ViewModel"
        xmlns:view="clr-namespace:MeasureApp.View"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:geared="clr-namespace:LiveCharts.Geared;assembly=LiveCharts.Geared"
        mc:Ignorable="d"
        Title="MeasureApp" Height="600" Width="1000">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <viewmodel:EventCommandBase Command="{Binding MainWindowLoadedEvent}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closed">
            <viewmodel:EventCommandBase Command="{Binding MainWindowClosedEvent}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.DataContext>
        <viewmodel:MainWindowDataContext/>
    </Window.DataContext>
    <Window.Resources>
        <viewmodel:M3458ASyncMeasureButtonContentConverter x:Key="M3458ASyncMeasureButtonContentConverter"/>
        <viewmodel:SerialPortsStatusTextConverter x:Key="SerialPortsStatusTextConverter"/>
        <viewmodel:SerialPortCommandIsListeningButtonContentConverter x:Key="SerialPortCommandIsListeningButtonContentConverter"/>
        <viewmodel:SecondsToTimeFormatConverter x:Key="SecondsToTimeFormatConverter"/>
        <viewmodel:AutomationTaskRunButtonConverter x:Key="AutomationTaskRunButtonConverter"/>
        <viewmodel:SerialPortRecvDataTypeToBoolConverter x:Key="SerialPortRecvDataTypeToBoolConverter"/>
        <viewmodel:SerialPortRecvDataEncodeToBoolConverter x:Key="SerialPortRecvDataEncodeToBoolConverter"/>
        <viewmodel:Bool2ControlVisibilityConverter x:Key="Bool2ControlVisibilityConverter"/>
        <viewmodel:BoolInverter2ControlVisibilityConverter x:Key="BoolInverter2ControlVisibilityConverter"/>
        <viewmodel:DateTimeToStringConverter x:Key="DateTimeToStringConverter"/>
        <viewmodel:IsNotNullConverter x:Key="IsNotNullConverter"/>
        <viewmodel:IntToBitBoolConverter x:Key="IntToBitBoolConverter"/>
    </Window.Resources>
    <DockPanel>
        <Grid>
            <StatusBar DockPanel.Dock="Bottom" MaxHeight="20" VerticalAlignment="Bottom">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="150"/>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="160"/>
                        <ColumnDefinition Width="60"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Margin="5,0,5,0" Text="{Binding StatusBarText}"></TextBlock>
                    <TextBlock Grid.Column="1" Margin="3,0,3,0" HorizontalAlignment="Right" Text="{Binding StatusBarProgressElapsedTime, Converter={StaticResource SecondsToTimeFormatConverter}}"></TextBlock>
                    <ProgressBar Grid.Column="2" Margin="5,0,5,0" Minimum="{Binding StatusBarProgressBarMin}" Maximum="{Binding StatusBarProgressBarMax}" Value="{Binding StatusBarProgressBarValue}"/>
                    <TextBlock Grid.Column="3" Margin="3,0,3,0" HorizontalAlignment="Left" Text="{Binding StatusBarProgressETATime, Converter={StaticResource SecondsToTimeFormatConverter}}"></TextBlock>
                </Grid>
            </StatusBar>
            <TabControl Margin="10,10,9.6,24.8">
                <TabItem Header="设备连接调试">
                    <Grid>
                        <GroupBox Header="GPIB设备发现" HorizontalAlignment="Left" Height="166" Margin="10,10,0,0" VerticalAlignment="Top" Width="407">
                            <Grid>
                                <Button x:Name="SearchGPIBDevicesButton" Content="搜索GPIB设备" HorizontalAlignment="Left" Margin="227,83,0,0" VerticalAlignment="Top" Width="158" Height="23">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding GpibDeviceSearchEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button x:Name="OpenGPIBDeviceButton" Content="打开GPIB设备" HorizontalAlignment="Left" Margin="227,111,0,0" VerticalAlignment="Top" Width="158" Height="23">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding GpibDeviceOpenEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <ComboBox x:Name="GpibDeviceComboBox" ItemsSource="{Binding GpibDevicesName}" SelectedValue="{Binding GpibDevicesSelectedName}" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="201" Height="23"/>
                                <TextBlock x:Name="DeviceNameLabel" Text="{Binding GpibDeviceConnectStatusText}" HorizontalAlignment="Left" Margin="227,10,0,0" VerticalAlignment="Top" Width="158" Height="68"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="串口设备发现" HorizontalAlignment="Left" Height="166" Margin="422,10,0,0" VerticalAlignment="Top" Width="407">
                            <Grid>
                                <Button x:Name="SearchSerialPortButton" Content="搜索串口设备" Margin="231,0,10,0" VerticalAlignment="Center" Height="23">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialPortDeviceSearchEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button x:Name="OpenSerialPortButton" Content="打开串口设备" Margin="231,88,10,0" VerticalAlignment="Top" Height="23">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialPortDeviceOpenEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button x:Name="CloseSerialPortButton" Content="关闭串口设备" Margin="231,116,10,0" VerticalAlignment="Top" Height="23">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialPortDeviceCloseEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <ComboBox x:Name="SerialPortNameComboBox" ItemsSource="{Binding SerialportDevicesNameComboBoxItems}" SelectedValue="{Binding SerialportDevicesNameSelectedValue}" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="201" Height="23"/>
                                <TextBlock Text="波特率：" HorizontalAlignment="Left" Margin="10,41,0,0" Width="71" TextWrapping="Wrap" Height="18" VerticalAlignment="Top"/>
                                <ComboBox x:Name="SerialPortBaudRateComboBox" ItemsSource="{Binding SerialportDeviceBaudRateList}" Text="{Binding SerialportDeviceBaudRate}" IsEditable="True" HorizontalAlignment="Left" Margin="86,38,0,0" VerticalAlignment="Top" Width="125" Height="23"/>
                                <TextBlock Text="校验位：" HorizontalAlignment="Left" Margin="10,67,0,0" Width="71" TextWrapping="Wrap" Height="18" VerticalAlignment="Top"/>
                                <ComboBox ItemsSource="{Binding SerialportDeviceParityList}" SelectedValue="{Binding SerialportDeviceParitySelectedValue}" HorizontalAlignment="Left" Margin="86,64,0,0" VerticalAlignment="Top" Width="125" Height="23"/>
                                <TextBlock Text="数据位：" HorizontalAlignment="Left" Margin="10,92,0,0" Width="71" TextWrapping="Wrap" Height="18" VerticalAlignment="Top"/>
                                <ComboBox ItemsSource="{Binding SerialportDeviceDataBitsList}" SelectedValue="{Binding SerialportDeviceDataBitsSelectedValue}" HorizontalAlignment="Left" Margin="86,90,0,0" VerticalAlignment="Top" Width="125" Height="23"/>
                                <TextBlock Text="停止位：" HorizontalAlignment="Left" Margin="10,121,0,0" Width="71" TextWrapping="Wrap" Height="18" VerticalAlignment="Top"/>
                                <ComboBox ItemsSource="{Binding SerialportDeviceStopBitsList}" SelectedValue="{Binding SerialportDeviceStopBitsSelectedValue}" HorizontalAlignment="Left" Margin="86,118,0,0" VerticalAlignment="Top" Width="125" Height="23"/>
                                <TextBlock x:Name="SerialPortDeviceNameTextBlock" Text="{Binding SerialPortsInstance.SerialPortsDict.Values, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource SerialPortsStatusTextConverter}}" HorizontalAlignment="Left" Margin="231,10,0,0" Width="154" TextWrapping="Wrap" Height="45" VerticalAlignment="Top"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="GPIB调试" HorizontalAlignment="Left" Margin="10,181,0,10" Width="407">
                            <Grid>
                                <TextBlock Text="Write Command" HorizontalAlignment="Left" Margin="10,41,0,0" VerticalAlignment="Top" Width="201"/>
                                <TextBlock Text="Read Data" HorizontalAlignment="Left" Margin="10,117,0,0" VerticalAlignment="Top" Width="201"/>
                                <TextBox x:Name="WriteCmdTextBox" Text="{Binding GPIBDebugWriteCommandText}" HorizontalAlignment="Left" Height="51" Margin="10,61,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="201"/>
                                <TextBox x:Name="ReadCmdTextBox" Text="{Binding GPIBDebugReadCommandText}" HorizontalAlignment="Left" Height="51" Margin="10,138,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="201"/>
                                <Button x:Name="QueryCmdButton" Content="Query" HorizontalAlignment="Left" Margin="227,61,0,0" VerticalAlignment="Top" Width="158" Height="51">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding GPIBDebugCommandEvent}" CommandParameter="Query"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button x:Name="WriteCmdButton" Content="Write" HorizontalAlignment="Left" Margin="227,137,0,0" VerticalAlignment="Top" Width="158" Height="23">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding GPIBDebugCommandEvent}" CommandParameter="Write"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button x:Name="ReadCmdButton" Content="Read" HorizontalAlignment="Left" Margin="227,165,0,0" VerticalAlignment="Top" Width="158" Height="23">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding GPIBDebugCommandEvent}" CommandParameter="Read"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="串口调试" HorizontalAlignment="Left" Margin="422,181,0,10" Width="407">
                            <Grid>
                                <CheckBox Content="16进制写入" IsChecked="{Binding SerialPortDebugWriteIsHex}" HorizontalAlignment="Left" Margin="129,41,0,0" VerticalAlignment="Top"/>
                                <CheckBox Content="16进制读取" IsChecked="{Binding SerialPortDebugReadIsHex}" HorizontalAlignment="Left" Margin="129,117,0,0" VerticalAlignment="Top"/>
                                <ComboBox x:Name="SerialPortDebugSelectComboBox" ItemsSource="{Binding SerialPortsInstance.SerialPortsDict, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Key" SelectedValue="{Binding SerialportDebugPortNameSelectedValue, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" HorizontalAlignment="Left" Margin="288,16,0,0" VerticalAlignment="Top" Width="97" Height="23"/>
                                <Button x:Name="SerialPortWriteCmdButton" Content="Write" HorizontalAlignment="Left" Margin="227,61,0,0" VerticalAlignment="Top" Width="158" Height="51">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialPortDebugWriteCmdEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button x:Name="SerialPortReadCmdButton" Content="Read" HorizontalAlignment="Left" Margin="227,137,0,0" VerticalAlignment="Top" Width="158" Height="51">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialPortDebugReadCmdEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <TextBox x:Name="SerialPortWriteCmdTextBox" Text="{Binding SerialPortDebugWriteCommandText}" HorizontalAlignment="Left" Height="51" Margin="10,61,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="201"/>
                                <TextBox x:Name="SerialPortReadCmdTextBox" Text="{Binding SerialPortDebugReadCommandText}" HorizontalAlignment="Left" Height="51" Margin="10,138,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="201"/>
                                <TextBlock Text="Write Command" HorizontalAlignment="Left" Margin="10,41,0,0" VerticalAlignment="Top" Width="114"/>
                                <TextBlock Text="Read Data" HorizontalAlignment="Left" Margin="10,117,0,0" VerticalAlignment="Top" Width="114"/>
                                <TextBlock Text="串口选择" HorizontalAlignment="Left" Margin="227,21,0,0" VerticalAlignment="Top" Width="56"/>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </TabItem>
                <TabItem Header="3458A万用表控制">
                    <Grid>
                        <GroupBox Header="基本" Height="350" Margin="10,10,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="329">
                            <Grid>
                                <Button Tag="RESET" Content="复位" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="80">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="RESET"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Tag="ID" Content="ID" HorizontalAlignment="Left" Margin="10,33,0,0" VerticalAlignment="Top" Width="80">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="ID"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Tag="ERR" Content="错误信息" HorizontalAlignment="Left" Margin="107,10,0,0" VerticalAlignment="Top" Width="80">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="ERR"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Tag="STB" Content="状态位" HorizontalAlignment="Left" Margin="107,33,0,0" VerticalAlignment="Top" Width="80">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="STB"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Tag="TEMP" Content="机器温度" HorizontalAlignment="Left" Margin="207,10,0,0" VerticalAlignment="Top" Width="80">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="TEMP"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Tag="LINE" Content="工频频率" HorizontalAlignment="Left" Margin="207,33,0,0" VerticalAlignment="Top" Width="80">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="LINE"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <ComboBox Name="NdigComboBox" ItemsSource="{Binding M3458ANdigComboBoxItems}" SelectedValue="{Binding M3458ANdigSelectedValue}" SelectedValuePath="Tag" Margin="107,66,0,0" Width="80" HorizontalAlignment="Left" Height="20" VerticalAlignment="Top"/>
                                <Button Tag="NDIG" Content="显示位数" HorizontalAlignment="Left" Margin="207,66,0,0" VerticalAlignment="Top" Width="80">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="NDIG"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>

                                <ComboBox Name="AcalComboBox" ItemsSource="{Binding M3458AAcalComboBoxItems}" SelectedValue="{Binding M3458AAcalSelectedValue}" SelectedValuePath="Tag" HorizontalAlignment="Left" Margin="10,110,0,0" VerticalAlignment="Top" Width="163" Height="22"/>
                                <Button Tag="ACAL" Content="执行自动校准" HorizontalAlignment="Left" Margin="178,110,0,0" VerticalAlignment="Top" Width="130" Height="22">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="ACAL"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <ComboBox Name="RangeComboBox" ItemsSource="{Binding M3458ASetRangeComboBoxItems}" SelectedValue="{Binding M3458ASetRangeSelectedValue}" SelectedValuePath="Tag" HorizontalAlignment="Left" Margin="10,146,0,0" VerticalAlignment="Top" Width="79" Height="22"/>
                                <ComboBox Name="ResComboBox" ItemsSource="{Binding M3458ASetResolutionComboBoxItems}" SelectedValue="{Binding M3458ASetResolutionSelectedValue}" SelectedValuePath="Tag" HorizontalAlignment="Left" Margin="94,146,0,0" VerticalAlignment="Top" Width="79" Height="22"/>
                                <Button Tag="RANGE" Content="设置量程/精度" HorizontalAlignment="Left" Margin="178,146,0,0" VerticalAlignment="Top" Width="130" Height="22">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="RANGE"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <TextBox Name="NplcTextBox" Text="{Binding M3458ASetNplcText}" HorizontalAlignment="Left" Height="23" Margin="10,183,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="163"/>
                                <Button Tag="NPLC" Content="设置速率(NPLC)" HorizontalAlignment="Left" Margin="178,183,0,0" VerticalAlignment="Top" Width="130" Height="22">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="NPLC"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Tag="RANGE?" Content="读量程/精度" HorizontalAlignment="Left" Margin="16,220,0,0" VerticalAlignment="Top" Width="130" Height="22">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="RANGE?"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Tag="NPLC?" Content="读输出速率(NPLC)" HorizontalAlignment="Left" Margin="170,220,0,0" VerticalAlignment="Top" Width="130" Height="22">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding M3458ABasicConfigEvent}" CommandParameter="NPLC?"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <TextBox Name="GuiConfigLogTextBox" Margin="10,257,9.8,10" TextWrapping="Wrap" Text="{Binding M3458ABasicConfigCommandLogText}"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="测量" HorizontalAlignment="Left" Margin="344,10,0,0" Width="405" Height="350" VerticalAlignment="Top">
                            <Grid>
                                <Border VerticalAlignment="Top" Margin="10,10,10,0" Height="130" BorderBrush="Gray" BorderThickness="0.5" CornerRadius="3">
                                    <Grid>
                                        <TextBlock Text="自动测量电压" Margin="10,10,10,0" VerticalAlignment="Top"/>
                                        <TextBlock x:Name="SyncDCVDisplayTextBlock" Text="{Binding M3458ASyncMeasureText}" TextWrapping="Wrap" Margin="10,42,159,0" TextAlignment="Center" VerticalAlignment="Top" FontSize="24" Height="34"/>
                                        <Button x:Name="SyncDCVDisplayButton" Content="{Binding M3458AIsSyncMeasureOpen, Converter={StaticResource M3458ASyncMeasureButtonContentConverter}}" HorizontalAlignment="Left" Margin="218,30,0,0" VerticalAlignment="Top" Width="145" Height="57">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <viewmodel:EventCommandBase Command="{Binding M3458ASyncMeasureEvent}" CommandParameter="{Binding ElementName=SyncDCVDisplayStorageCheckBox, Path=IsChecked}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                        <CheckBox Name="SyncDCVDisplayStorageCheckBox" Content="自动存储" HorizontalAlignment="Left" Margin="218,92,0,0" VerticalAlignment="Top"/>
                                    </Grid>
                                </Border>

                                <Border VerticalAlignment="Top" Margin="10,145,10,0" Height="173" BorderBrush="Gray" BorderThickness="0.5" CornerRadius="3">
                                    <Grid>
                                        <TextBlock Text="手动测量电压" Margin="10,10,10,0" VerticalAlignment="Top"/>
                                        <TextBlock Text="速度选择:" Margin="10,43,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="71"/>
                                        <Button x:Name="SetMinNPLCButton" Content="高速度(0 NPLC)" Height="22" Margin="86,40,0,0" HorizontalAlignment="Left" Width="130" VerticalAlignment="Top">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <viewmodel:EventCommandBase Command="{Binding M3458ASetNPLCEvent}" CommandParameter="0"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                        <Button x:Name="SetMaxNPLCButton" Content="高精度(100 NPLC)" Height="22" Margin="221,40,0,0" HorizontalAlignment="Left" Width="130" VerticalAlignment="Top">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <viewmodel:EventCommandBase Command="{Binding M3458ASetNPLCEvent}" CommandParameter="100"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                        <TextBlock Text="量程选择:" Margin="10,70,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="71"/>
                                        <ComboBox x:Name="ManualReadDCVRangeComboBox" ItemsSource="{Binding M3458ASetRangeComboBoxItems}" SelectedValue="{Binding M3458AManualMeasureRangeSelectedValue}" SelectedValuePath="Tag" HorizontalAlignment="Left" Margin="86,67,0,0" VerticalAlignment="Top" Width="79" Height="22"/>
                                        <ComboBox x:Name="ManualReadDCVResComboBox" ItemsSource="{Binding M3458ASetResolutionComboBoxItems}" SelectedValue="{Binding M3458AManualMeasureResolutionSelectedValue}" SelectedValuePath="Tag" HorizontalAlignment="Left" Margin="170,67,0,0" VerticalAlignment="Top" Width="79" Height="22"/>
                                        <TextBlock x:Name="ManualReadDCVTextBlock" Text="{Binding M3458AManualMeasureText}" TextWrapping="Wrap" Margin="10,98,159,0" TextAlignment="Center" VerticalAlignment="Top" FontSize="24" Height="34"/>
                                        <Button x:Name="ManualReadDCVButton" Content="手动读取电压" HorizontalAlignment="Left" Margin="218,94,0,0" VerticalAlignment="Top" Width="144" Height="41">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <viewmodel:EventCommandBase Command="{Binding M3458AManualMeasureEvent}" CommandParameter="{Binding ElementName=ManualStorageDCVCheckBox, Path=IsChecked}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                        <CheckBox Name="ManualStorageDCVCheckBox" Content="自动存储" HorizontalAlignment="Left" Margin="218,140,0,0" VerticalAlignment="Top"/>
                                    </Grid>
                                </Border>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </TabItem>
                <TabItem Header="串口指令通信">
                    <Grid>
                        <TextBlock Text="串口选择：" TextWrapping="Wrap" Margin="10,14,0,0" TextAlignment="Center" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                        <ComboBox ItemsSource="{Binding SerialPortsInstance.SerialPortsDict, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Key" SelectedValue="{Binding SerialportCommandPortNameSelectedValue, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" HorizontalAlignment="Left" Margin="75,10,0,0" VerticalAlignment="Top" Width="97" Height="23"/>
                        <Button Content="{Binding SerialPortCommandIsListeningDataReceived,Converter={StaticResource SerialPortCommandIsListeningButtonContentConverter}}" Margin="447,10,0,0" HorizontalAlignment="Left" Width="106" Height="23" VerticalAlignment="Top">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <viewmodel:EventCommandBase Command="{Binding SerialPortCommandListenEvent}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <Button Content="清空记录" Margin="558,10,0,0" HorizontalAlignment="Left" Width="106" Height="23" VerticalAlignment="Top">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <viewmodel:EventCommandBase Command="{Binding SerialPortCommandCleanLogEvent}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <Button Content="导出记录" Margin="669,10,0,0" HorizontalAlignment="Left" Width="106" Height="23" VerticalAlignment="Top">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <viewmodel:EventCommandBase Command="{Binding SerialPortCommandSaveLogEvent}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <CheckBox Name="SerialPortCommandLogIsAutoScrollCheckBox" IsChecked="True" Content="自动滚动" VerticalAlignment="Top" Margin="780,14,0,0" HorizontalAlignment="Left" Width="68"/>
                        <Border Margin="10,261,0,10" HorizontalAlignment="Left" Width="432" BorderBrush="Gray" BorderThickness="1.5">
                            <Grid>
                                <view:BindableAvalonEditor Document="{Binding SerialportCommandScriptEditorDocument}" Margin="5,5,0,5" ShowLineNumbers="True" FontFamily="Consolas" FontSize="10pt" HorizontalAlignment="Left" Width="284"/>
                                <Button Content="加载" Margin="294,10,0,0" VerticalAlignment="Top" Height="28" HorizontalAlignment="Left" Width="60">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialPortCommandScriptLoadFileEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Content="保存" Margin="359,10,0,0" VerticalAlignment="Top" Height="28" HorizontalAlignment="Left" Width="60">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialPortCommandScriptSaveFileEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Content="运行" Margin="294,43,0,0" VerticalAlignment="Top" Height="28" HorizontalAlignment="Left" Width="60">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialPortCommandScriptRunEvent}" CommandParameter="Run"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Content="单步" Margin="294,76,0,0" VerticalAlignment="Top" Height="28" HorizontalAlignment="Left" Width="60">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialPortCommandScriptRunEvent}" CommandParameter="RunOnce"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Content="行数重置" Margin="359,76,0,0" VerticalAlignment="Top" Height="28" HorizontalAlignment="Left" Width="60">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialPortCommandScriptRunEvent}" CommandParameter="ClearCursor"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <CheckBox Content="至STOP" IsChecked="{Binding SerialportCommandScriptIsRunToStop}" Margin="359,49,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="70"/>
                                <TextBlock Text="运行延时" Margin="294,113,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="48"/>
                                <TextBox Text="{Binding SerialportCommandScriptRunDelayMilliSecound, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="347,112,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="37" Height="18"/>
                                <TextBlock Text="毫秒" Margin="389,113,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="30"/>
                                <TextBlock Text="行数" Margin="294,136,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="30"/>
                                <TextBox Text="{Binding SerialportCommandScriptCurruntLineCursor}" HorizontalAlignment="Left" Margin="329,135,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="37" Height="18"/>
                                <TextBlock Text="/" Margin="371,136,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="10"/>
                                <TextBlock Text="{Binding SerialportCommandScriptEditorDocument.LineCount}" Margin="386,136,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="33"/>
                            </Grid>
                        </Border>
                        <ListView Margin="447,38,10,10" ItemsSource="{Binding SerialPortLogger.LogCollection}">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="Foreground" Value="{Binding Color}"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="时间" DisplayMemberBinding="{Binding Time, Converter={StaticResource DateTimeToStringConverter}}" Width="160"/>
                                    <GridViewColumn Header="发送方" DisplayMemberBinding="{Binding Host}" Width="50"/>
                                    <GridViewColumn Header="消息" DisplayMemberBinding="{Binding Message}" Width="300"/>
                                </GridView>
                            </ListView.View>
                            <i:Interaction.Behaviors>
                                <viewmodel:AutoScrollBehavior IsAutoScroll="{Binding ElementName=SerialPortCommandLogIsAutoScrollCheckBox, Path=IsChecked}"/>
                            </i:Interaction.Behaviors>
                        </ListView>
                        <TabControl Margin="10,38,0,0" HorizontalAlignment="Left" Width="432" Height="218" VerticalAlignment="Top" TabStripPlacement="Left">
                            <TabItem Header="基本">
                                <Grid>
                                    <!--ShowGridLines="True"-->
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="1*"/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="1*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.Resources>
                                        <VisualBrush x:Key="HintTextRegisterAddress" TileMode="None" Opacity="0.5" Stretch="None" AlignmentX="Left">
                                            <VisualBrush.Visual>
                                                <TextBlock FontStyle="Italic" Text="Address"/>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                        <VisualBrush x:Key="HintTextRegisterData" TileMode="None" Opacity="0.5" Stretch="None" AlignmentX="Left">
                                            <VisualBrush.Visual>
                                                <TextBlock FontStyle="Italic" Text="Data"/>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                        <VisualBrush x:Key="HintTextRegisterBits" TileMode="None" Opacity="0.5" Stretch="None" AlignmentX="Left">
                                            <VisualBrush.Visual>
                                                <TextBlock FontStyle="Italic" Text="Start:End"/>
                                            </VisualBrush.Visual>
                                        </VisualBrush>
                                    </Grid.Resources>
                                    <!--TODO-->
                                    <TextBlock Margin="5,5,5,5" Text="{Binding SerialportCommandModels[0].CommandInfo}" Grid.Row="0" Grid.Column="0"/>
                                    <Button Margin="5,5,5,5" Content="{Binding SerialportCommandModels[0].CommandText}" Grid.Row="0" Grid.Column="3">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <viewmodel:EventCommandBase Command="{Binding SerialPortCommandSendEvent}" CommandParameter="0"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                    <Button Margin="5,5,5,5" Content="{Binding SerialportCommandModels[1].CommandText}" Grid.Row="0" Grid.Column="4">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <viewmodel:EventCommandBase Command="{Binding SerialPortCommandSendEvent}" CommandParameter="1"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                    <TextBlock Margin="5,5,5,5" Text="{Binding SerialportCommandModels[2].CommandInfo}" Grid.Row="1" Grid.Column="0"/>
                                    <TextBox Margin="5,5,5,5" Text="{Binding SerialportCommandModels[2].ParamTexts[0]}" Grid.Row="1" Grid.Column="1">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="{x:Null}">
                                                        <Setter Property="Background" Value="{StaticResource HintTextRegisterAddress}"/>
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Background" Value="{StaticResource HintTextRegisterAddress}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                    <Button Margin="5,5,5,5" Content="{Binding SerialportCommandModels[2].CommandText}" Grid.Row="1" Grid.Column="4">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <viewmodel:EventCommandBase Command="{Binding SerialPortCommandSendEvent}" CommandParameter="2"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                    <TextBlock Margin="5,5,5,5" Text="{Binding SerialportCommandModels[3].CommandInfo}" Grid.Row="2" Grid.Column="0"/>
                                    <Button Margin="5,5,5,5" Content="{Binding SerialportCommandModels[3].CommandText}" Grid.Row="2" Grid.Column="4">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <viewmodel:EventCommandBase Command="{Binding SerialPortCommandSendEvent}" CommandParameter="3"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                    <TextBlock Margin="5,5,5,5" Text="{Binding SerialportCommandModels[4].CommandInfo}" Grid.Row="3" Grid.Column="0"/>
                                    <TextBox Margin="5,5,5,5" Text="{Binding SerialportCommandModels[4].ParamTexts[0]}" Grid.Row="3" Grid.Column="1">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="{x:Null}">
                                                        <Setter Property="Background" Value="{StaticResource HintTextRegisterAddress}"/>
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Background" Value="{StaticResource HintTextRegisterAddress}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                    <TextBox Margin="5,5,5,5" Text="{Binding SerialportCommandModels[4].ParamTexts[1]}" Grid.Row="3" Grid.Column="2">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="{x:Null}">
                                                        <Setter Property="Background" Value="{StaticResource HintTextRegisterData}"/>
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Background" Value="{StaticResource HintTextRegisterData}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                    <Button Margin="5,5,5,5" Content="{Binding SerialportCommandModels[4].CommandText}" Grid.Row="3" Grid.Column="4">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <viewmodel:EventCommandBase Command="{Binding SerialPortCommandSendEvent}" CommandParameter="4"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                    <TextBlock Margin="5,5,5,5" Text="{Binding SerialportCommandModels[5].CommandInfo}" Grid.Row="4" Grid.Column="0"/>
                                    <TextBox Margin="5,5,5,5" Text="{Binding SerialportCommandModels[5].ParamTexts[0]}" Grid.Row="4" Grid.Column="1">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="{x:Null}">
                                                        <Setter Property="Background" Value="{StaticResource HintTextRegisterAddress}"/>
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Background" Value="{StaticResource HintTextRegisterAddress}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                    <Button Margin="5,5,5,5" Content="{Binding SerialportCommandModels[5].CommandText}" Grid.Row="4" Grid.Column="4">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <viewmodel:EventCommandBase Command="{Binding SerialPortCommandSendEvent}" CommandParameter="5"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                    <TextBlock Margin="5,5,5,5" Text="{Binding SerialportCommandModels[6].CommandInfo}" Grid.Row="5" Grid.Column="0"/>
                                    <TextBox Margin="5,5,5,5" Text="{Binding SerialportCommandModels[6].ParamTexts[0]}" Grid.Row="5" Grid.Column="1">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="{x:Null}">
                                                        <Setter Property="Background" Value="{StaticResource HintTextRegisterAddress}"/>
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Background" Value="{StaticResource HintTextRegisterAddress}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                    <TextBox Margin="5,5,5,5" Text="{Binding SerialportCommandModels[6].ParamTexts[1]}" Grid.Row="5" Grid.Column="2">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="{x:Null}">
                                                        <Setter Property="Background" Value="{StaticResource HintTextRegisterBits}"/>
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Background" Value="{StaticResource HintTextRegisterBits}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                    <TextBox Margin="5,5,5,5" Text="{Binding SerialportCommandModels[6].ParamTexts[2]}" Grid.Row="5" Grid.Column="3">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="{x:Null}">
                                                        <Setter Property="Background" Value="{StaticResource HintTextRegisterData}"/>
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Background" Value="{StaticResource HintTextRegisterData}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                    <Button Margin="5,5,5,5" Content="{Binding SerialportCommandModels[6].CommandText}" Grid.Row="5" Grid.Column="4">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <viewmodel:EventCommandBase Command="{Binding SerialPortCommandSendEvent}" CommandParameter="6"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                    <TextBlock Margin="5,5,5,5" Text="{Binding SerialportCommandModels[7].CommandInfo}" Grid.Row="6" Grid.Column="0"/>
                                    <TextBox Margin="5,5,5,5" Text="{Binding SerialportCommandModels[7].ParamTexts[0]}" Grid.Row="6" Grid.Column="1">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="{x:Null}">
                                                        <Setter Property="Background" Value="{StaticResource HintTextRegisterAddress}"/>
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Background" Value="{StaticResource HintTextRegisterAddress}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                    <TextBox Margin="5,5,5,5" Text="{Binding SerialportCommandModels[7].ParamTexts[1]}" Grid.Row="6" Grid.Column="2">
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="{x:Null}">
                                                        <Setter Property="Background" Value="{StaticResource HintTextRegisterBits}"/>
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Background" Value="{StaticResource HintTextRegisterBits}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                    </TextBox>
                                    <Button Margin="5,5,5,5" Content="{Binding SerialportCommandModels[7].CommandText}" Grid.Row="6" Grid.Column="4">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <viewmodel:EventCommandBase Command="{Binding SerialPortCommandSendEvent}" CommandParameter="7"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                </Grid>
                            </TabItem>
                            <TabItem Header="预设">
                                <Grid>
                                    <Grid.Resources>
                                        <CollectionViewSource x:Key="SerialPortPresetCommandsGroupView" Source="{Binding SerialPortPresetCommands}">
                                            <CollectionViewSource.GroupDescriptions>
                                                <PropertyGroupDescription PropertyName="GroupName"/>
                                            </CollectionViewSource.GroupDescriptions>
                                        </CollectionViewSource>
                                    </Grid.Resources>
                                    <ListView Name="SerialPortPresetCommandsListView" ItemsSource="{Binding Source={StaticResource SerialPortPresetCommandsGroupView}}" SelectedItem="{Binding SerialportPresetCommandSelectedItem}" Margin="0,0,76,0">
                                        <ListView.View>
                                            <GridView>
                                                <!--<GridViewColumn Header="命令组" DisplayMemberBinding="{Binding GroupName}" Width="80"/>-->
                                                <GridViewColumn Header="命令配置" DisplayMemberBinding="{Binding Name}" Width="120"/>
                                                <!--<GridViewColumn Header="命令描述" DisplayMemberBinding="{Binding Description}" Width="100"/>-->
                                                <GridViewColumn Header="命令脚本" DisplayMemberBinding="{Binding Command}" Width="150"/>
                                            </GridView>
                                        </ListView.View>
                                        <ListView.GroupStyle>
                                            <GroupStyle>
                                                <GroupStyle.ContainerStyle>
                                                    <Style TargetType="{x:Type GroupItem}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type GroupItem}">
                                                                    <Expander IsExpanded="True" BorderBrush="Gray" BorderThickness="1">
                                                                        <Expander.Header>
                                                                            <DockPanel>
                                                                                <TextBlock FontWeight="Bold" Text="{Binding Name}" Margin="5,0,0,0" Width="auto"/>
                                                                            </DockPanel>
                                                                        </Expander.Header>
                                                                        <Expander.Content>
                                                                            <ItemsPresenter/>
                                                                        </Expander.Content>
                                                                    </Expander>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </GroupStyle.ContainerStyle>
                                            </GroupStyle>
                                        </ListView.GroupStyle>
                                    </ListView>
                                    <Button Content="加载" Margin="317,10,0,0" VerticalAlignment="Top" Height="28" Width="61" HorizontalAlignment="Left">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <viewmodel:EventCommandBase Command="{Binding SerialPortCommandPresetLoadEvent}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                    <Button Content="发送" Margin="317,43,0,0" VerticalAlignment="Top" Height="28" Width="61" HorizontalAlignment="Left" IsEnabled="{Binding ElementName=SerialPortPresetCommandsListView,Path=SelectedItem,Converter={StaticResource IsNotNullConverter}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <viewmodel:EventCommandBase Command="{Binding SerialPortCommandPresetSendEvent}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                    <Button Content="添加" Margin="317,76,0,0" VerticalAlignment="Top" Height="28" Width="61" HorizontalAlignment="Left" IsEnabled="{Binding ElementName=SerialPortPresetCommandsListView,Path=SelectedItem,Converter={StaticResource IsNotNullConverter}}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Click">
                                                <viewmodel:EventCommandBase Command="{Binding SerialportCommandPresetAddCodeEvent}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Button>
                                </Grid>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </TabItem>
                <TabItem Header="串口数据通信">
                    <Grid>
                        <GroupBox Header="传输" HorizontalAlignment="Left" Margin="10,10,0,0" Width="460" Height="392" VerticalAlignment="Top">
                            <Grid>
                                <TextBlock Text="发送:" HorizontalAlignment="Left" Margin="10,23,0,0" VerticalAlignment="Top"/>
                                <CheckBox Name="SerialPortSendCmdIsHexCheckBox" Content="16进制" IsChecked="{Binding SerialPortSendCmdIsHex}" HorizontalAlignment="Left" Margin="10,53,0,0" VerticalAlignment="Top"/>
                                <ComboBox x:Name="SerialPortSendCmdSerialPortNameComboBox" ItemsSource="{Binding SerialPortsInstance.SerialPortsDict, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Key" SelectedValue="{Binding SerialPortSendCmdSerialPortNameSelectedValue, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" HorizontalAlignment="Left" Margin="328,20,0,0" VerticalAlignment="Top" Width="110" Height="23">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <viewmodel:EventCommandBase Command="{Binding SerialPortSendCmdChangedEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </ComboBox>
                                <Grid HorizontalAlignment="Left" Width="250" Height="93" VerticalAlignment="Top" Margin="73,10,0,0" Visibility="{Binding ElementName=SerialPortSendCmdIsHexCheckBox, Path=IsChecked, Converter={StaticResource BoolInverter2ControlVisibilityConverter}}">
                                    <ComboBox x:Name="SerialPortSendCmdCommandNameComboBox" SelectedValue="{Binding SerialportSendCmdCommandNameSelectedValue, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Tag" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="227" Height="23">
                                        <ComboBoxItem Content="SET" Tag="SET"/>
                                        <ComboBoxItem Content="GET" Tag="GET"/>
                                        <ComboBoxItem Content="START" Tag="START"/>
                                        <ComboBoxItem Content="END" Tag="END"/>
                                        <ComboBoxItem Tag="Others" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                                            <TextBox Name="SerialPortSendCmdCommandNameManualTextBox" Margin="0,0,20,0" Width="80" Text="{Binding SerialPortSendCmdCommandNameManualText, UpdateSourceTrigger=PropertyChanged}" Foreground="{Binding SerialPortSendCmdCommandNameManualTextBoxForeGround}">
                                                <TextBox.Resources>
                                                    <VisualBrush x:Key="HintText"  TileMode="None" Opacity="0.5" Stretch="None" AlignmentX="Left">
                                                        <VisualBrush.Visual>
                                                            <TextBlock FontStyle="Italic" Text="自定义命令"/>
                                                        </VisualBrush.Visual>
                                                    </VisualBrush>
                                                </TextBox.Resources>
                                                <TextBox.Style>
                                                    <Style TargetType="{x:Type TextBox}">
                                                        <Style.Triggers>
                                                            <Trigger Property="Text" Value="{x:Null}">
                                                                <Setter Property="Background" Value="{StaticResource HintText}"/>
                                                            </Trigger>
                                                            <Trigger Property="Text" Value="">
                                                                <Setter Property="Background" Value="{StaticResource HintText}"/>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBox.Style>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="TextChanged">
                                                        <viewmodel:EventCommandBase Command="{Binding SerialPortSendCmdChangedEvent}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </TextBox>
                                        </ComboBoxItem>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <viewmodel:EventCommandBase Command="{Binding SerialPortSendCmdChangedEvent}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ComboBox>
                                    <TextBlock Text=";" HorizontalAlignment="Left" Margin="242,14,0,0" VerticalAlignment="Top" Width="7"/>
                                    <TextBox Name="SerialPortSendCmdParamsTextBox" Text="{Binding SerialPortSendCmdParamsText, UpdateSourceTrigger=PropertyChanged}" Foreground="{Binding SerialPortSendCmdParamsTextBoxForeGround}" Margin="10,38,0,0" TextWrapping="Wrap" Height="22" VerticalAlignment="Top" HorizontalAlignment="Left" Width="227">
                                        <TextBox.Resources>
                                            <VisualBrush x:Key="HintText"  TileMode="None" Opacity="0.5" Stretch="None" AlignmentX="Left">
                                                <VisualBrush.Visual>
                                                    <TextBlock FontStyle="Italic" Text="自定义参数，可用&quot; ,;|&amp;&quot;分隔多个参数"/>
                                                </VisualBrush.Visual>
                                            </VisualBrush>
                                        </TextBox.Resources>
                                        <TextBox.Style>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Style.Triggers>
                                                    <Trigger Property="Text" Value="{x:Null}">
                                                        <Setter Property="Background" Value="{StaticResource HintText}"/>
                                                    </Trigger>
                                                    <Trigger Property="Text" Value="">
                                                        <Setter Property="Background" Value="{StaticResource HintText}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBox.Style>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <viewmodel:EventCommandBase Command="{Binding SerialPortSendCmdChangedEvent}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <TextBlock Text=";" HorizontalAlignment="Left" Margin="242,41,0,0" VerticalAlignment="Top" Width="7"/>
                                    <TextBlock Text="预览:" HorizontalAlignment="Left" Margin="10,68,0,0" VerticalAlignment="Top" Width="33"/>
                                    <TextBlock Name="SerialPortSendCmdPreviewTextBlock" Text="{Binding SerialPortSendCmdPreviewText}" HorizontalAlignment="Left" Margin="48,68,0,0" VerticalAlignment="Top" Width="198"/>
                                </Grid>
                                <Grid HorizontalAlignment="Left" Width="250" Height="93" VerticalAlignment="Top" Margin="73,10,0,0" Visibility="{Binding ElementName=SerialPortSendCmdIsHexCheckBox, Path=IsChecked, Converter={StaticResource Bool2ControlVisibilityConverter}}">
                                    <TextBox Text="{Binding SerialPortSendCmdHexText}" Margin="10,10,10,10"/>
                                </Grid>
                                <Button Name="SerialPortSendCmdButton" Content="发送命令" HorizontalAlignment="Left" Margin="328,48,0,0" VerticalAlignment="Top" Width="110" Height="46">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialPortSendCmdEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <TextBlock Text="接收:" HorizontalAlignment="Left" Margin="10,120,0,0" VerticalAlignment="Top" Width="33"/>
                                <GroupBox Header="数据类型" HorizontalAlignment="Left" Height="81" Margin="48,122,0,0" VerticalAlignment="Top" Width="390">
                                    <Grid Name="SerialPortRecvDataTypesGrid">
                                        <RadioButton Content="Ascii" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" GroupName="SerialPortRecvDataEncodeGroupName" IsChecked="{Binding SerialPortRecvDataEncodeEnum, Converter={StaticResource SerialPortRecvDataEncodeToBoolConverter}, ConverterParameter=0}"/>
                                        <RadioButton Name="SerialPortRecvDataTypeIsBytesRadioButton" Content="Bytes" HorizontalAlignment="Left" Margin="10,34,0,0" VerticalAlignment="Top" GroupName="SerialPortRecvDataEncodeGroupName" IsChecked="{Binding SerialPortRecvDataEncodeEnum, Converter={StaticResource SerialPortRecvDataEncodeToBoolConverter}, ConverterParameter=1}"/>

                                        <RadioButton Content="Char" HorizontalAlignment="Left" Margin="110,10,0,0" VerticalAlignment="Top" GroupName="SerialPortRecvDataTypeGroupName" IsChecked="{Binding SerialPortRecvDataTypeEnum, Converter={StaticResource SerialPortRecvDataTypeToBoolConverter}, ConverterParameter=0}"/>
                                        <RadioButton Content="UInt8" HorizontalAlignment="Left" Margin="174,10,0,0" VerticalAlignment="Top" GroupName="SerialPortRecvDataTypeGroupName" IsChecked="{Binding SerialPortRecvDataTypeEnum, Converter={StaticResource SerialPortRecvDataTypeToBoolConverter}, ConverterParameter=1}"/>
                                        <RadioButton Content="UInt16" HorizontalAlignment="Left" Margin="241,10,0,0" VerticalAlignment="Top" GroupName="SerialPortRecvDataTypeGroupName" IsChecked="{Binding SerialPortRecvDataTypeEnum, Converter={StaticResource SerialPortRecvDataTypeToBoolConverter}, ConverterParameter=2}"/>
                                        <RadioButton Content="UInt32" HorizontalAlignment="Left" Margin="313,10,0,0" VerticalAlignment="Top" GroupName="SerialPortRecvDataTypeGroupName" IsChecked="{Binding SerialPortRecvDataTypeEnum, Converter={StaticResource SerialPortRecvDataTypeToBoolConverter}, ConverterParameter=3}"/>
                                        <CheckBox Name="SerialPortRecvDataTypeIsArrayCheckBox" Content="Array&lt;T&gt;.Count:" HorizontalAlignment="Left" Margin="110,34,0,0" VerticalAlignment="Top" IsChecked="{Binding IsArray}" IsEnabled="{Binding ElementName=SerialPortRecvDataTypeIsBytesRadioButton, Path=IsChecked}"/>
                                        <TextBox HorizontalAlignment="Left" Height="19" Margin="229,32,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="142" IsEnabled="{Binding ElementName=SerialPortRecvDataTypeIsArrayCheckBox, Path=IsChecked}" Text="{Binding ArrayCount}"/>
                                    </Grid>
                                </GroupBox>
                                <Button Name="SerialPortRecvDataButton" Content="接收数据" HorizontalAlignment="Left" Margin="195,208,0,0" VerticalAlignment="Top" Width="110" Height="32">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialPortRecvDataEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Name="SerialPortRecvDataStorageButton" Content="存储数据" HorizontalAlignment="Left" Margin="328,208,0,0" VerticalAlignment="Top" Width="110" Height="32">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding SerialPortRecvDataStorageEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <TextBox Name="SerialPortRecvDataDisplayTextBox" Text="{Binding SerialPortRecvDataDisplayText}" HorizontalAlignment="Left" Height="115" Margin="48,245,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="390"/>
                                <ComboBox x:Name="SerialPortRecvDataSerialPortNameComboBox" ItemsSource="{Binding SerialPortsInstance.SerialPortsDict, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Key" SelectedValue="{Binding SerialPortRecvDataSerialPortNameSelectedValue, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" HorizontalAlignment="Left" Margin="48,212,0,0" VerticalAlignment="Top" Width="120" Height="23"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="存储" HorizontalAlignment="Left" Height="392" Margin="475,10,0,0" VerticalAlignment="Top" Width="350">
                            <DataGrid Name="SerialPortRecvDataStorageDataGrid" ItemsSource="{Binding DataStorageInstance.DataStorageDictionary[Serial Port Data Storage], UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False" IsReadOnly="True" Height="355" Margin="5,0,5.4,4.6" VerticalAlignment="Bottom">
                                <DataGrid.Columns>
                                    <DataGridTextColumn CanUserSort="False" Width="1*" Header="数据" Binding="{Binding Value}"/>
                                </DataGrid.Columns>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="LoadingRow">
                                        <viewmodel:EventCommandBase Command="{Binding DataGridLoadingRowAddRowIndexEvent}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </DataGrid>
                        </GroupBox>
                    </Grid>
                </TabItem>
                <TabItem Header="数据存储">
                    <Grid>
                        <GroupBox Header="存储" Margin="10,10,10.2,10">
                            <Grid>
                                <TextBlock Text="选择数据源：" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="230"/>
                                <ListBox Name="DataStorageSelectListBox" ItemsSource="{Binding DataStorageInstance.DataStorageDictionary,UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Key" SelectedValue="{Binding DataStorageSelectedValue}" SelectedValuePath="Key" HorizontalAlignment="Left" Height="106" Margin="10,30,0,0" VerticalAlignment="Top" Width="230">
                                    <!--<i:Interaction.Triggers>
                                        <i:EventTrigger EventName="SelectionChanged">
                                            <viewmodel:EventCommandBase Command="{Binding DataStorageSelectionChangedEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>-->
                                </ListBox>
                                <DataGrid Name="DataStorageDataGrid" ItemsSource="{Binding DataStorageDataGridBinding}" AutoGenerateColumns="False" IsReadOnly="True" Margin="245,25,6,5">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn CanUserSort="False" Width="1*" Header="数据" Binding="{Binding Value}"/>
                                    </DataGrid.Columns>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="LoadingRow">
                                            <viewmodel:EventCommandBase Command="{Binding DataGridLoadingRowAddRowIndexEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </DataGrid>
                                <Button Name="DataStorageExportListDataButton" Content="导出选中数据" HorizontalAlignment="Left" Margin="10,191,0,0" VerticalAlignment="Top" Width="107" Height="32">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding DataStorageStoreEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Name="DataStorageClearListDataButton" Content="清空选中数据" HorizontalAlignment="Left" Margin="133,191,0,0" VerticalAlignment="Top" Width="107" Height="32">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding DataStorageDeleteEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <TextBox HorizontalAlignment="Left" VerticalContentAlignment="Center" Margin="10,228,0,0" Text="{Binding DataStorageAddKeyNameText}" TextWrapping="Wrap" VerticalAlignment="Top" Width="107" Height="32"/>
                                <Button Content="添加键值对" HorizontalAlignment="Left" Margin="133,228,0,0" VerticalAlignment="Top" Width="107" Height="32">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding DataStorageAddKeyValuePairEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Content="删除键值对" HorizontalAlignment="Left" Margin="133,265,0,0" VerticalAlignment="Top" Width="107" Height="32">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding DataStorageRemoveKeyValuePairEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Content="加载数据文件" HorizontalAlignment="Left" Margin="10,154,0,0" VerticalAlignment="Top" Width="107" Height="32">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding DataStorageLoadEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Content="保存数据文件" HorizontalAlignment="Left" Margin="133,154,0,0" VerticalAlignment="Top" Width="107" Height="32">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding DataStorageSaveEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </TabItem>
                <TabItem Header="可视化">
                    <Grid>
                        <Button Content="刷新选中数据" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="107" Height="32">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <viewmodel:EventCommandBase Command="{Binding PlotViewPlotRefreshEvent}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <Button Content="大数据量测试" HorizontalAlignment="Left" Margin="10,47,0,0" VerticalAlignment="Top" Width="107" Height="32">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <viewmodel:EventCommandBase Command="{Binding PlotViewTestEvent}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <Border Margin="205,10,10,10" BorderBrush="Gray" BorderThickness="1.5">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"></RowDefinition>
                                    <RowDefinition Height="100"></RowDefinition>
                                </Grid.RowDefinitions>
                                <lvc:CartesianChart Grid.Row="0" Zoom="X" DisableAnimations="True" Hoverable="False" DataTooltip="{x:Null}">
                                    <lvc:CartesianChart.Resources>
                                        <Style TargetType="lvc:Separator">
                                            <Setter Property="StrokeThickness" Value="2.5"></Setter>
                                            <Setter Property="Stroke" Value="#E7E7E7"></Setter>
                                            <Style.Triggers>
                                                <Trigger Property="AxisOrientation" Value="X">
                                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </lvc:CartesianChart.Resources>
                                    <lvc:CartesianChart.Series>
                                        <geared:GLineSeries Values="{Binding PlotViewLineValues}" Fill="Transparent" PointGeometry="{x:Null}" LineSmoothness="0"/>
                                    </lvc:CartesianChart.Series>
                                    <lvc:CartesianChart.AxisX>
                                        <lvc:Axis MinValue="{Binding PlotViewFrom, Mode=TwoWay}" MaxValue="{Binding PlotViewTo, Mode=TwoWay}" Separator="{x:Static lvc:DefaultAxes.CleanSeparator}"/>
                                    </lvc:CartesianChart.AxisX>
                                </lvc:CartesianChart>
                                <lvc:CartesianChart Grid.Row="1" DisableAnimations="True" 
                                        ScrollMode="X"
                                        ScrollHorizontalFrom="{Binding PlotViewFrom, Mode=TwoWay}"
                                        ScrollHorizontalTo="{Binding PlotViewTo, Mode=TwoWay}"
                                        ScrollBarFill="#25303030"
                                        DataTooltip="{x:Null}"
                                        Hoverable="False"
                                        Margin="20 10">
                                    <lvc:CartesianChart.Resources>
                                        <Style TargetType="lvc:Separator">
                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                        </Style>
                                    </lvc:CartesianChart.Resources>
                                    <lvc:CartesianChart.Series>
                                        <geared:GLineSeries Values="{Binding PlotViewLineValues}"
                                        Fill="Silver"
                                        StrokeThickness="0"
                                        PointGeometry="{x:Null}"
                                        AreaLimit="0"/>
                                    </lvc:CartesianChart.Series>
                                    <lvc:CartesianChart.AxisX>
                                        <lvc:Axis IsMerged="True" 
                                              Foreground="#98000000"
                                              FontSize="22"
                                              FontWeight="UltraBold"/>
                                    </lvc:CartesianChart.AxisX>
                                    <lvc:CartesianChart.AxisY>
                                        <lvc:Axis ShowLabels="False" />
                                    </lvc:CartesianChart.AxisY>
                                </lvc:CartesianChart>
                            </Grid>
                        </Border>
                    </Grid>
                </TabItem>
                <TabItem Header="自动化脚本">
                    <Grid>
                        <GroupBox Header="自动化脚本" Margin="10,10,10.2,10">
                            <Grid>
                                <Border Margin="156,10,10,10" BorderBrush="Gray" BorderThickness="1.5">
                                    <view:BindableAvalonEditor x:Name="AutomationCodeEditor" Text="{Binding AutomationCodeEditorText}" SyntaxHighlighting="C#" ShowLineNumbers="True" FontFamily="Consolas" FontSize="10pt"/>
                                </Border>
                                <Button Content="加载" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Height="30" Width="68">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding AutomationCodeLoadFileEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Content="保存" HorizontalAlignment="Left" Margin="83,10,0,0" VerticalAlignment="Top" Height="30" Width="68">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding AutomationCodeSaveFileEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Content="{Binding AutomationIsRun, Converter={StaticResource AutomationTaskRunButtonConverter}}" HorizontalAlignment="Left" Margin="10,45,0,0" VerticalAlignment="Top" Height="30" Width="141">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <viewmodel:EventCommandBase Command="{Binding AutomationCodeRunEvent}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Label Content="返回值" HorizontalAlignment="Left" Margin="10,80,0,0" VerticalAlignment="Top" Height="25"/>
                                <TextBox Text="{Binding AutomationCodeReturnData}" HorizontalAlignment="Left" Margin="10,110,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="141" Height="38"/>
                                <Grid Width="141" HorizontalAlignment="Left" Margin="10,153,0,10"/>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </TabItem>
                <TabItem Header="实用工具">
                    <Grid>
                        <GroupBox Header="比特位计算" Margin="10,10,0,243" HorizontalAlignment="Left" Width="446">
                            <Grid>
                                <TextBox Text="{Binding Bits, UpdateSourceTrigger=PropertyChanged}" Width="50" Margin="20,10,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                <Grid Height="70" Width="320" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="20,40,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="20"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="15"/>
                                        <RowDefinition Height="20"/>
                                        <RowDefinition Height="15"/>
                                        <RowDefinition Height="20"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="31" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="0"/>
                                    <TextBlock Text="30" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="0"/>
                                    <TextBlock Text="29" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="0"/>
                                    <TextBlock Text="28" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="3" Grid.Row="0"/>
                                    <TextBlock Text="27" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="4" Grid.Row="0"/>
                                    <TextBlock Text="26" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="5" Grid.Row="0"/>
                                    <TextBlock Text="25" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="6" Grid.Row="0"/>
                                    <TextBlock Text="24" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="7" Grid.Row="0"/>
                                    <TextBlock Text="23" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="8" Grid.Row="0"/>
                                    <TextBlock Text="22" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="9" Grid.Row="0"/>
                                    <TextBlock Text="21" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="10" Grid.Row="0"/>
                                    <TextBlock Text="20" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="11" Grid.Row="0"/>
                                    <TextBlock Text="19" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="12" Grid.Row="0"/>
                                    <TextBlock Text="18" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="13" Grid.Row="0"/>
                                    <TextBlock Text="17" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="14" Grid.Row="0"/>
                                    <TextBlock Text="16" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="15" Grid.Row="0"/>
                                    <TextBlock Text="15" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="2"/>
                                    <TextBlock Text="14" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="2"/>
                                    <TextBlock Text="13" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="2"/>
                                    <TextBlock Text="12" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="3" Grid.Row="2"/>
                                    <TextBlock Text="11" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="4" Grid.Row="2"/>
                                    <TextBlock Text="10" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="5" Grid.Row="2"/>
                                    <TextBlock Text="9" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="6" Grid.Row="2"/>
                                    <TextBlock Text="8" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="7" Grid.Row="2"/>
                                    <TextBlock Text="7" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="8" Grid.Row="2"/>
                                    <TextBlock Text="6" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="9" Grid.Row="2"/>
                                    <TextBlock Text="5" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="10" Grid.Row="2"/>
                                    <TextBlock Text="4" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="11" Grid.Row="2"/>
                                    <TextBlock Text="3" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="12" Grid.Row="2"/>
                                    <TextBlock Text="2" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="13" Grid.Row="2"/>
                                    <TextBlock Text="1" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="14" Grid.Row="2"/>
                                    <TextBlock Text="0" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="15" Grid.Row="2"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=31}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Grid.Row="1"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=30}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Grid.Row="1"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=29}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2" Grid.Row="1"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=28}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="3" Grid.Row="1"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=27}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="4" Grid.Row="1"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=26}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="5" Grid.Row="1"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=25}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="6" Grid.Row="1"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=24}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="7" Grid.Row="1"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=23}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="8" Grid.Row="1"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=22}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="9" Grid.Row="1"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=21}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="10" Grid.Row="1"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=20}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="11" Grid.Row="1"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=19}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="12" Grid.Row="1"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=18}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="13" Grid.Row="1"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=17}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="14" Grid.Row="1"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=16}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="15" Grid.Row="1"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=15}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Grid.Row="3"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=14}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Grid.Row="3"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=13}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2" Grid.Row="3"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=12}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="3" Grid.Row="3"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=11}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="4" Grid.Row="3"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=10}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="5" Grid.Row="3"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=9}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="6" Grid.Row="3"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=8}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="7" Grid.Row="3"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=7}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="8" Grid.Row="3"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=6}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="9" Grid.Row="3"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=5}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="10" Grid.Row="3"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=4}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="11" Grid.Row="3"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=3}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="12" Grid.Row="3"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=2}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="13" Grid.Row="3"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=1}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="14" Grid.Row="3"/>
                                    <CheckBox IsChecked="{Binding Bits, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource IntToBitBoolConverter},ConverterParameter=0}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="15" Grid.Row="3"/>
                                </Grid>
                            </Grid>
                        </GroupBox>
                    </Grid>
                </TabItem>
                <TabItem Header="设置">
                    <Grid>
                        <Border BorderBrush="Gray" BorderThickness="0.5" CornerRadius="3" Margin="10,10,0,10" HorizontalAlignment="Left" Width="405">
                            <Grid Name="SettingsGrid">
                                <TextBlock Text="GPIB超时" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Width="120" Margin="10,10,0,0"/>
                                <TextBox Text="{Binding GPIBTimeoutSetting, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Width="98" Height="20" VerticalAlignment="Top" Margin="135,10,0,0"/>
                                <TextBlock Text="毫秒" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Width="40" Margin="238,10,0,0"/>
                                <TextBlock Text="串口超时" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Width="120" Margin="10,35,0,0"/>
                                <TextBox Text="{Binding SerialPortTimeoutSetting, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Width="98" Height="20" VerticalAlignment="Top" Margin="135,35,0,0"/>
                                <TextBlock Text="毫秒" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Width="40" Margin="238,35,0,0"/>
                                <TextBlock Text="串口缓冲区大小" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Width="120" Margin="10,60,0,0"/>
                                <TextBox Text="{Binding SerialPortBufferSetting, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Width="98" Height="20" VerticalAlignment="Top" Margin="135,60,0,0"/>
                                <TextBlock Text="字节" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Width="40" Margin="238,60,0,0"/>
                                <TextBlock Text="串口日志关键词高亮" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Width="120" Margin="10,85,0,0"/>
                                <CheckBox IsChecked="{Binding SerialPortLogKeywordHighlightSetting,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="135,87,0,0" VerticalAlignment="Top"/>
                            </Grid>
                        </Border>
                        <Border BorderBrush="Gray" BorderThickness="0.5" CornerRadius="3" Margin="420,10,10,10">
                            <TextBlock Text="{Binding SettingsVersionText}" Margin="5,5,5,5" TextWrapping="Wrap"/>
                        </Border>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>
    </DockPanel>
</Window>
