<Window x:Class="MeasureApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:MeasureApp"
        xmlns:viewmodel="clr-namespace:MeasureApp.ViewModel"
        xmlns:vmc="clr-namespace:MeasureApp.ViewModel.Common"
        xmlns:view="clr-namespace:MeasureApp.View.Control"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:geared="clr-namespace:LiveCharts.Geared;assembly=LiveCharts.Geared" xmlns:webview="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:editor="clr-namespace:RoslynPad.Editor;assembly=RoslynPad.Editor.Windows"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        xmlns:ad="https://github.com/Dirkster99/AvalonDock"
        d:DataContext="{d:DesignInstance Type=viewmodel:MainWindowDataContext}"
        mc:Ignorable="d"
        Title="MeasureApp" Height="650" Width="1200">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <vmc:EventCommandBase Command="{Binding MainWindowLoadedEvent}"/>
        </i:EventTrigger>
        <i:EventTrigger EventName="Closed">
            <vmc:EventCommandBase Command="{Binding MainWindowClosedEvent}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <viewmodel:SerialPortsStatusTextConverter x:Key="SerialPortsStatusTextConverter"/>
        <viewmodel:SerialPortCommandIsListeningButtonContentConverter x:Key="SerialPortCommandIsListeningButtonContentConverter"/>
        <viewmodel:SecondsToTimeFormatConverter x:Key="SecondsToTimeFormatConverter"/>
        <viewmodel:AutomationTaskRunButtonConverter x:Key="AutomationTaskRunButtonConverter"/>
        <viewmodel:SerialPortRecvDataTypeToBoolConverter x:Key="SerialPortRecvDataTypeToBoolConverter"/>
        <viewmodel:SerialPortRecvDataEncodeToBoolConverter x:Key="SerialPortRecvDataEncodeToBoolConverter"/>
        <viewmodel:Bool2ControlVisibilityConverter x:Key="Bool2ControlVisibilityConverter"/>
        <viewmodel:BoolInverter2ControlVisibilityConverter x:Key="BoolInverter2ControlVisibilityConverter"/>
        <viewmodel:DateTimeToStringConverter x:Key="DateTimeToStringConverter"/>
        <viewmodel:IsNotNullConverter x:Key="IsNotNullConverter"/>
        <viewmodel:Num2HexConverter x:Key="Num2HexConverter"/>
        <viewmodel:String2NullableDecimalConverter x:Key="String2NullableDecimalConverter"/>
    </Window.Resources>
    <DockPanel>
        <Grid>
            <StatusBar DockPanel.Dock="Bottom" MaxHeight="20" VerticalAlignment="Bottom">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="500"/>
                        <ColumnDefinition Width="60"/>
                        <ColumnDefinition Width="160"/>
                        <ColumnDefinition Width="60"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Margin="5,0,5,0" Text="{Binding StatusBarText}"></TextBlock>
                    <TextBlock Grid.Column="1" Margin="3,0,3,0" HorizontalAlignment="Right" Text="{Binding TaskProgressInstance.TaskProgressElapsedTime, Converter={StaticResource SecondsToTimeFormatConverter}}"></TextBlock>
                    <ProgressBar Grid.Column="2" Margin="5,0,5,0" Minimum="{Binding TaskProgressInstance.TaskProgressStart}" Maximum="{Binding TaskProgressInstance.TaskProgressEnd}" Value="{Binding TaskProgressInstance.TaskProgressValue}"/>
                    <TextBlock Grid.Column="3" Margin="3,0,3,0" HorizontalAlignment="Left" Text="{Binding TaskProgressInstance.TaskProgressETATime, Converter={StaticResource SecondsToTimeFormatConverter}}"></TextBlock>
                </Grid>
            </StatusBar>
            <ad:DockingManager>
                <ad:DockingManager.Theme>
                    <!--<ad:Vs2013DarkTheme/>-->
                    <ad:Vs2013LightTheme/>
                </ad:DockingManager.Theme>
                <ad:LayoutRoot>
                    <ad:LayoutPanel Orientation="Horizontal" DockHeight="Auto" DockWidth="Auto">
                        <ad:LayoutAnchorablePaneGroup DockMinWidth="120" FloatingWidth="240">
                            <ad:LayoutAnchorablePane Name="panelLeft" DockHeight="*" DockWidth="*">
                                <ad:LayoutAnchorable Title="Left1" CanHide="False">
                                </ad:LayoutAnchorable>
                                <ad:LayoutAnchorable Title="Left2" CanHide="False">
                                </ad:LayoutAnchorable>
                            </ad:LayoutAnchorablePane>
                        </ad:LayoutAnchorablePaneGroup>
                        <ad:LayoutDocumentPaneGroup DockHeight="Auto" DockWidth="Auto">
                            <ad:LayoutDocumentPane x:Name="panelTop" DockHeight="*" DockWidth="*">
                                <ad:LayoutAnchorable Title="设备连接" CanHide="False">
                                    <ad:LayoutAnchorable.Content>
                                        <Frame Content="{Binding Pages.DevicesConnectionPage}"/>
                                    </ad:LayoutAnchorable.Content>
                                </ad:LayoutAnchorable>
                                <ad:LayoutAnchorable Title="3458A万用表控制" CanHide="False">
                                    <ad:LayoutAnchorable.Content>
                                        <Frame Content="{Binding Pages.Multimeter3458AControlPage}"/>
                                    </ad:LayoutAnchorable.Content>
                                </ad:LayoutAnchorable>
                                <ad:LayoutAnchorable Title="串口指令通信" CanHide="False">
                                    <ad:LayoutAnchorable.Content>
                                        <Frame Content="{Binding Pages.SerialPortInstructionPage}"/>
                                    </ad:LayoutAnchorable.Content>
                                </ad:LayoutAnchorable>
                                <ad:LayoutAnchorable Title="串口数据包通信" CanHide="False">
                                    <ad:LayoutAnchorable.Content>
                                        <Frame Content="{Binding Pages.SerialPortPacketPage}"/>
                                    </ad:LayoutAnchorable.Content>
                                </ad:LayoutAnchorable>
                                <ad:LayoutAnchorable Title="可视化" CanHide="False">
                                    <ad:LayoutAnchorable.Content>
                                        <Frame Content="{Binding Pages.DataStorageVisualizationPage}"/>
                                    </ad:LayoutAnchorable.Content>
                                </ad:LayoutAnchorable>
                                <ad:LayoutAnchorable Title="自动化" CanHide="False">
                                    <ad:LayoutAnchorable.Content>
                                        <Frame Content="{Binding Pages.AutomationPage}"/>
                                    </ad:LayoutAnchorable.Content>
                                </ad:LayoutAnchorable>
                                <ad:LayoutAnchorable Title="FFT分析" CanHide="False">
                                    <ad:LayoutAnchorable.Content>
                                        <Frame Content="{Binding Pages.FftAnalysisPage}"/>
                                    </ad:LayoutAnchorable.Content>
                                </ad:LayoutAnchorable>
                                <ad:LayoutAnchorable Title="实用工具" CanHide="False">
                                    <Grid>
                                        <GroupBox Header="位计算" Margin="10,10,0,243" HorizontalAlignment="Left" Width="446">
                                            <Grid>
                                                <Grid Height="70" Width="340" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="20,20,0,0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="20"/>
                                                        <ColumnDefinition Width="20"/>
                                                        <ColumnDefinition Width="20"/>
                                                        <ColumnDefinition Width="20"/>
                                                        <ColumnDefinition Width="20"/>
                                                        <ColumnDefinition Width="20"/>
                                                        <ColumnDefinition Width="20"/>
                                                        <ColumnDefinition Width="20"/>
                                                        <ColumnDefinition Width="20"/>
                                                        <ColumnDefinition Width="20"/>
                                                        <ColumnDefinition Width="20"/>
                                                        <ColumnDefinition Width="20"/>
                                                        <ColumnDefinition Width="20"/>
                                                        <ColumnDefinition Width="20"/>
                                                        <ColumnDefinition Width="20"/>
                                                        <ColumnDefinition Width="20"/>
                                                        <ColumnDefinition Width="20"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="15"/>
                                                        <RowDefinition Height="20"/>
                                                        <RowDefinition Height="15"/>
                                                        <RowDefinition Height="20"/>
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Text="31" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="0"/>
                                                    <TextBlock Text="30" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="0"/>
                                                    <TextBlock Text="29" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="0"/>
                                                    <TextBlock Text="28" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="3" Grid.Row="0"/>
                                                    <TextBlock Text="27" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="4" Grid.Row="0"/>
                                                    <TextBlock Text="26" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="5" Grid.Row="0"/>
                                                    <TextBlock Text="25" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="6" Grid.Row="0"/>
                                                    <TextBlock Text="24" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="7" Grid.Row="0"/>
                                                    <TextBlock Text="23" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="9" Grid.Row="0"/>
                                                    <TextBlock Text="22" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="10" Grid.Row="0"/>
                                                    <TextBlock Text="21" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="11" Grid.Row="0"/>
                                                    <TextBlock Text="20" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="12" Grid.Row="0"/>
                                                    <TextBlock Text="19" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="13" Grid.Row="0"/>
                                                    <TextBlock Text="18" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="14" Grid.Row="0"/>
                                                    <TextBlock Text="17" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="15" Grid.Row="0"/>
                                                    <TextBlock Text="16" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="16" Grid.Row="0"/>
                                                    <TextBlock Text="15" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="2"/>
                                                    <TextBlock Text="14" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1" Grid.Row="2"/>
                                                    <TextBlock Text="13" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="2" Grid.Row="2"/>
                                                    <TextBlock Text="12" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="3" Grid.Row="2"/>
                                                    <TextBlock Text="11" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="4" Grid.Row="2"/>
                                                    <TextBlock Text="10" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="5" Grid.Row="2"/>
                                                    <TextBlock Text="9" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="6" Grid.Row="2"/>
                                                    <TextBlock Text="8" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="7" Grid.Row="2"/>
                                                    <TextBlock Text="7" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="9" Grid.Row="2"/>
                                                    <TextBlock Text="6" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="10" Grid.Row="2"/>
                                                    <TextBlock Text="5" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="11" Grid.Row="2"/>
                                                    <TextBlock Text="4" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="12" Grid.Row="2"/>
                                                    <TextBlock Text="3" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="13" Grid.Row="2"/>
                                                    <TextBlock Text="2" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="14" Grid.Row="2"/>
                                                    <TextBlock Text="1" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="15" Grid.Row="2"/>
                                                    <TextBlock Text="0" TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="16" Grid.Row="2"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[31].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Grid.Row="1"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[30].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Grid.Row="1"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[29].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2" Grid.Row="1"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[28].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="3" Grid.Row="1"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[27].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="4" Grid.Row="1"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[26].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="5" Grid.Row="1"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[25].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="6" Grid.Row="1"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[24].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="7" Grid.Row="1"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[23].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="9" Grid.Row="1"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[22].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="10" Grid.Row="1"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[21].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="11" Grid.Row="1"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[20].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="12" Grid.Row="1"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[19].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="13" Grid.Row="1"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[18].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="14" Grid.Row="1"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[17].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="15" Grid.Row="1"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[16].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="16" Grid.Row="1"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[15].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Grid.Row="3"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[14].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1" Grid.Row="3"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[13].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2" Grid.Row="3"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[12].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="3" Grid.Row="3"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[11].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="4" Grid.Row="3"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[10].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="5" Grid.Row="3"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[9].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="6" Grid.Row="3"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[8].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="7" Grid.Row="3"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[7].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="9" Grid.Row="3"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[6].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="10" Grid.Row="3"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[5].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="11" Grid.Row="3"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[4].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="12" Grid.Row="3"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[3].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="13" Grid.Row="3"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[2].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="14" Grid.Row="3"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[1].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="15" Grid.Row="3"/>
                                                    <CheckBox IsChecked="{Binding BitsModel.Bits[0].Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="16" Grid.Row="3"/>
                                                </Grid>
                                                <TextBlock Text="10进制:" Margin="20,110,0,0" Width="48" Height="17" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                                <TextBox Text="{Binding BitsModel.Num, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="100" Margin="73,110,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                                <TextBlock Text="16进制:" Margin="20,132,0,0" Width="48" Height="17" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                                <TextBox Text="{Binding BitsModel.Num, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged,Converter={StaticResource Num2HexConverter}}" Width="100" Margin="73,132,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                            </Grid>
                                        </GroupBox>
                                    </Grid>
                                </ad:LayoutAnchorable>
                                <ad:LayoutAnchorable Title="设置" CanHide="False">
                                    <Grid>
                                        <Border BorderBrush="Gray" BorderThickness="0.5" CornerRadius="3" Margin="10,10,0,10" HorizontalAlignment="Left" Width="405">
                                            <Grid Name="SettingsGrid">
                                                <TextBlock Text="GPIB超时" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Width="120" Margin="10,10,0,0"/>
                                                <TextBox Text="{Binding GPIBTimeoutSetting, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Width="98" Height="20" VerticalAlignment="Top" Margin="135,10,0,0"/>
                                                <TextBlock Text="毫秒" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Width="40" Margin="238,10,0,0"/>
                                                <TextBlock Text="串口超时" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Width="120" Margin="10,35,0,0"/>
                                                <TextBox Text="{Binding SerialPortTimeoutSetting, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Width="98" Height="20" VerticalAlignment="Top" Margin="135,35,0,0"/>
                                                <TextBlock Text="毫秒" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Width="40" Margin="238,35,0,0"/>
                                                <TextBlock Text="串口缓冲区大小" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Width="120" Margin="10,60,0,0"/>
                                                <TextBox Text="{Binding SerialPortBufferSetting, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Width="98" Height="20" VerticalAlignment="Top" Margin="135,60,0,0"/>
                                                <TextBlock Text="字节" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Width="40" Margin="238,60,0,0"/>
                                                <TextBlock Text="串口日志关键词高亮" Height="20" VerticalAlignment="Top" HorizontalAlignment="Left" Width="120" Margin="10,85,0,0"/>
                                                <CheckBox IsChecked="{Binding SerialPortLogKeywordHighlightSetting,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="135,87,0,0" VerticalAlignment="Top"/>
                                            </Grid>
                                        </Border>
                                        <Border BorderBrush="Gray" BorderThickness="0.5" CornerRadius="3" Margin="420,10,10,10">
                                            <TextBlock Text="{Binding SettingsVersionText}" Margin="5,5,5,5" TextWrapping="Wrap"/>
                                        </Border>
                                    </Grid>
                                </ad:LayoutAnchorable>
                                <ad:LayoutAnchorable Title="预设测试项(TODO)" CanHide="False">
                                    <Grid>
                                        <Button Content="加载" IsEnabled="False" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="60"/>
                                        <GroupBox Header="NB2005测试" Height="298" Width="379" HorizontalAlignment="Left" Margin="10,44,0,0" VerticalAlignment="Top">
                                            <Grid>
                                                <TextBlock Text="测试项" HorizontalAlignment="Left" Margin="50,72,0,0" TextWrapping="Wrap" VerticalAlignment="Top"/>
                                                <TextBlock Text="返回值" HorizontalAlignment="Left" Margin="158,73,0,0" TextWrapping="Wrap" VerticalAlignment="Top"/>
                                                <TextBlock Text="芯片ID" HorizontalAlignment="Left" Margin="114,54,0,0" TextWrapping="Wrap" VerticalAlignment="Top"/>
                                                <TextBox Text="{Binding Nb2005ChipId,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left" Margin="156,53,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="78"/>

                                                <TextBlock Text="1" HorizontalAlignment="Left" Margin="27,94,0,0" TextWrapping="Wrap" VerticalAlignment="Top"/>
                                                <TextBlock Text="2" HorizontalAlignment="Left" Margin="27,118,0,0" TextWrapping="Wrap" VerticalAlignment="Top"/>
                                                <TextBlock Text="3" HorizontalAlignment="Left" Margin="27,142,0,0" TextWrapping="Wrap" VerticalAlignment="Top"/>
                                                <TextBlock Text="4" HorizontalAlignment="Left" Margin="27,166,0,0" TextWrapping="Wrap" VerticalAlignment="Top"/>
                                                <Button Content="测试A" HorizontalAlignment="Left" Margin="39,92,0,0" VerticalAlignment="Top" Width="70">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <vmc:EventCommandBase Command="{Binding Nb2005TestTaskEvent}" CommandParameter="1"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Button>
                                                <Button Content="测试B" HorizontalAlignment="Left" Margin="39,116,0,0" VerticalAlignment="Top" Width="70">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <vmc:EventCommandBase Command="{Binding Nb2005TestTaskEvent}" CommandParameter="2"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Button>
                                                <Button Content="测试C" HorizontalAlignment="Left" Margin="39,140,0,0" VerticalAlignment="Top" Width="70">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <vmc:EventCommandBase Command="{Binding Nb2005TestTaskEvent}" CommandParameter="3"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Button>
                                                <Button Content="测试D" HorizontalAlignment="Left" Margin="39,164,0,0" VerticalAlignment="Top" Width="70">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <vmc:EventCommandBase Command="{Binding Nb2005TestTaskEvent}" CommandParameter="4"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Button>
                                                <TextBox Text="{Binding Nb2005TestTaskResult1,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource String2NullableDecimalConverter}}" HorizontalAlignment="Left" Margin="114,93,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
                                                <TextBox Text="{Binding Nb2005TestTaskResult2,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource String2NullableDecimalConverter}}" HorizontalAlignment="Left" Margin="114,117,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
                                                <TextBox Text="{Binding Nb2005TestTaskResult3,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource String2NullableDecimalConverter}}" HorizontalAlignment="Left" Margin="114,141,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
                                                <TextBox Text="{Binding Nb2005TestTaskResult4,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource String2NullableDecimalConverter}}" HorizontalAlignment="Left" Margin="114,165,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
                                                <Button Content="写入" HorizontalAlignment="Left" Margin="248,92,0,0" VerticalAlignment="Top" Width="87">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <vmc:EventCommandBase Command="{Binding Nb2005TestResultWriteEvent}" CommandParameter="1"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Button>
                                                <Button Content="写入" HorizontalAlignment="Left" Margin="248,116,0,0" VerticalAlignment="Top" Width="87">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <vmc:EventCommandBase Command="{Binding Nb2005TestResultWriteEvent}" CommandParameter="2"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Button>
                                                <Button Content="写入" HorizontalAlignment="Left" Margin="248,140,0,0" VerticalAlignment="Top" Width="87">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <vmc:EventCommandBase Command="{Binding Nb2005TestResultWriteEvent}" CommandParameter="3"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Button>
                                                <Button Content="写入" HorizontalAlignment="Left" Margin="248,164,0,0" VerticalAlignment="Top" Width="87">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <vmc:EventCommandBase Command="{Binding Nb2005TestResultWriteEvent}" CommandParameter="4"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Button>

                                                <TextBlock Text="{Binding Nb2005ChipsConfigFilePath}" HorizontalAlignment="Left" Margin="128,12,0,0" TextWrapping="Wrap" VerticalAlignment="Top"/>
                                                <Button Content="从文件读取" HorizontalAlignment="Left" Margin="248,52,0,0" VerticalAlignment="Top" Width="87">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <vmc:EventCommandBase Command="{Binding Nb2005LoadChipConfigEvent}"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Button>
                                                <Button Content="配置文件加载" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="100">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <vmc:EventCommandBase Command="{Binding Nb2005LoadChipsConfigFileEvent}"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Button>
                                                <Button Content="更新至文件" HorizontalAlignment="Left" Margin="124,220,0,0" VerticalAlignment="Top" Width="100">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <vmc:EventCommandBase Command="{Binding Nb2005UpdateChipConfigEvent}"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Button>
                                                <Button Content="一键写入" HorizontalAlignment="Left" Margin="248,220,0,0" VerticalAlignment="Top" Width="87">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <vmc:EventCommandBase Command="{Binding Nb2005TestResultWriteAllEvent}" CommandParameter="4"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Button>
                                            </Grid>
                                        </GroupBox>

                                    </Grid>
                                </ad:LayoutAnchorable>
                                <ad:LayoutAnchorable Title="可视化(废弃)" CanHide="False">
                                    <Grid>
                                        <Button Content="刷新选中数据" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="107" Height="32">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <vmc:EventCommandBase Command="{Binding PlotViewPlotRefreshEvent}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                        <Button Content="大数据量测试" HorizontalAlignment="Left" Margin="10,47,0,0" VerticalAlignment="Top" Width="107" Height="32">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Click">
                                                    <vmc:EventCommandBase Command="{Binding PlotViewTestEvent}"/>
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Button>
                                        <Border Margin="205,10,10,10" BorderBrush="Gray" BorderThickness="1.5">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"></RowDefinition>
                                                    <RowDefinition Height="100"></RowDefinition>
                                                </Grid.RowDefinitions>
                                                <lvc:CartesianChart Grid.Row="0" Zoom="X" DisableAnimations="True" Hoverable="False" DataTooltip="{x:Null}">
                                                    <lvc:CartesianChart.Resources>
                                                        <Style TargetType="lvc:Separator">
                                                            <Setter Property="StrokeThickness" Value="2.5"></Setter>
                                                            <Setter Property="Stroke" Value="#E7E7E7"></Setter>
                                                            <Style.Triggers>
                                                                <Trigger Property="AxisOrientation" Value="X">
                                                                    <Setter Property="IsEnabled" Value="False"></Setter>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </lvc:CartesianChart.Resources>
                                                    <lvc:CartesianChart.Series>
                                                        <geared:GLineSeries Values="{Binding PlotViewLineValues}" Fill="Transparent" PointGeometry="{x:Null}" LineSmoothness="0"/>
                                                    </lvc:CartesianChart.Series>
                                                    <lvc:CartesianChart.AxisX>
                                                        <lvc:Axis MinValue="{Binding PlotViewFrom, Mode=TwoWay}" MaxValue="{Binding PlotViewTo, Mode=TwoWay}" Separator="{x:Static lvc:DefaultAxes.CleanSeparator}"/>
                                                    </lvc:CartesianChart.AxisX>
                                                </lvc:CartesianChart>
                                                <lvc:CartesianChart Grid.Row="1" DisableAnimations="True" 
                                        ScrollMode="X"
                                        ScrollHorizontalFrom="{Binding PlotViewFrom, Mode=TwoWay}"
                                        ScrollHorizontalTo="{Binding PlotViewTo, Mode=TwoWay}"
                                        ScrollBarFill="#25303030"
                                        DataTooltip="{x:Null}"
                                        Hoverable="False"
                                        Margin="20 10">
                                                    <lvc:CartesianChart.Resources>
                                                        <Style TargetType="lvc:Separator">
                                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                                        </Style>
                                                    </lvc:CartesianChart.Resources>
                                                    <lvc:CartesianChart.Series>
                                                        <geared:GLineSeries Values="{Binding PlotViewLineValues}"
                                        Fill="Silver"
                                        StrokeThickness="0"
                                        PointGeometry="{x:Null}"
                                        AreaLimit="0"/>
                                                    </lvc:CartesianChart.Series>
                                                    <lvc:CartesianChart.AxisX>
                                                        <lvc:Axis IsMerged="True" 
                                              Foreground="#98000000"
                                              FontSize="22"
                                              FontWeight="UltraBold"/>
                                                    </lvc:CartesianChart.AxisX>
                                                    <lvc:CartesianChart.AxisY>
                                                        <lvc:Axis ShowLabels="False" />
                                                    </lvc:CartesianChart.AxisY>
                                                </lvc:CartesianChart>
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </ad:LayoutAnchorable>
                                <ad:LayoutAnchorable Title="串口数据通信(废弃)" CanHide="False">
                                    <Grid>
                                        <GroupBox Header="传输" HorizontalAlignment="Left" Margin="10,10,0,0" Width="460" Height="392" VerticalAlignment="Top">
                                            <Grid>
                                                <TextBlock Text="发送:" HorizontalAlignment="Left" Margin="10,23,0,0" VerticalAlignment="Top"/>
                                                <CheckBox Name="SerialPortSendCmdIsHexCheckBox" Content="16进制" IsChecked="{Binding SerialPortSendCmdIsHex}" HorizontalAlignment="Left" Margin="10,53,0,0" VerticalAlignment="Top"/>
                                                <ComboBox x:Name="SerialPortSendCmdSerialPortNameComboBox" ItemsSource="{Binding SerialPortsInstance.SerialPortsDict, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Key" SelectedValue="{Binding SerialPortSendCmdSerialPortNameSelectedValue, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" HorizontalAlignment="Left" Margin="328,20,0,0" VerticalAlignment="Top" Width="110" Height="23">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="SelectionChanged">
                                                            <vmc:EventCommandBase Command="{Binding SerialPortSendCmdChangedEvent}"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </ComboBox>
                                                <Grid HorizontalAlignment="Left" Width="250" Height="93" VerticalAlignment="Top" Margin="73,10,0,0" Visibility="{Binding ElementName=SerialPortSendCmdIsHexCheckBox, Path=IsChecked, Converter={StaticResource BoolInverter2ControlVisibilityConverter}}">
                                                    <ComboBox x:Name="SerialPortSendCmdCommandNameComboBox" SelectedValue="{Binding SerialportSendCmdCommandNameSelectedValue, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Tag" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="227" Height="23">
                                                        <ComboBoxItem Content="SET" Tag="SET"/>
                                                        <ComboBoxItem Content="GET" Tag="GET"/>
                                                        <ComboBoxItem Content="START" Tag="START"/>
                                                        <ComboBoxItem Content="END" Tag="END"/>
                                                        <ComboBoxItem Tag="Others" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                                                            <TextBox Name="SerialPortSendCmdCommandNameManualTextBox" Margin="0,0,20,0" Width="80" Text="{Binding SerialPortSendCmdCommandNameManualText, UpdateSourceTrigger=PropertyChanged}" Foreground="{Binding SerialPortSendCmdCommandNameManualTextBoxForeGround}">
                                                                <TextBox.Resources>
                                                                    <VisualBrush x:Key="HintText"  TileMode="None" Opacity="0.5" Stretch="None" AlignmentX="Left">
                                                                        <VisualBrush.Visual>
                                                                            <TextBlock FontStyle="Italic" Text="自定义命令"/>
                                                                        </VisualBrush.Visual>
                                                                    </VisualBrush>
                                                                </TextBox.Resources>
                                                                <TextBox.Style>
                                                                    <Style TargetType="{x:Type TextBox}">
                                                                        <Style.Triggers>
                                                                            <Trigger Property="Text" Value="{x:Null}">
                                                                                <Setter Property="Background" Value="{StaticResource HintText}"/>
                                                                            </Trigger>
                                                                            <Trigger Property="Text" Value="">
                                                                                <Setter Property="Background" Value="{StaticResource HintText}"/>
                                                                            </Trigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </TextBox.Style>
                                                                <i:Interaction.Triggers>
                                                                    <i:EventTrigger EventName="TextChanged">
                                                                        <vmc:EventCommandBase Command="{Binding SerialPortSendCmdChangedEvent}"/>
                                                                    </i:EventTrigger>
                                                                </i:Interaction.Triggers>
                                                            </TextBox>
                                                        </ComboBoxItem>
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="SelectionChanged">
                                                                <vmc:EventCommandBase Command="{Binding SerialPortSendCmdChangedEvent}"/>
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </ComboBox>
                                                    <TextBlock Text=";" HorizontalAlignment="Left" Margin="242,14,0,0" VerticalAlignment="Top" Width="7"/>
                                                    <TextBox Name="SerialPortSendCmdParamsTextBox" Text="{Binding SerialPortSendCmdParamsText, UpdateSourceTrigger=PropertyChanged}" Foreground="{Binding SerialPortSendCmdParamsTextBoxForeGround}" Margin="10,38,0,0" TextWrapping="Wrap" Height="22" VerticalAlignment="Top" HorizontalAlignment="Left" Width="227">
                                                        <TextBox.Resources>
                                                            <VisualBrush x:Key="HintText"  TileMode="None" Opacity="0.5" Stretch="None" AlignmentX="Left">
                                                                <VisualBrush.Visual>
                                                                    <TextBlock FontStyle="Italic" Text="自定义参数，可用&quot; ,;|&amp;&quot;分隔多个参数"/>
                                                                </VisualBrush.Visual>
                                                            </VisualBrush>
                                                        </TextBox.Resources>
                                                        <TextBox.Style>
                                                            <Style TargetType="{x:Type TextBox}">
                                                                <Style.Triggers>
                                                                    <Trigger Property="Text" Value="{x:Null}">
                                                                        <Setter Property="Background" Value="{StaticResource HintText}"/>
                                                                    </Trigger>
                                                                    <Trigger Property="Text" Value="">
                                                                        <Setter Property="Background" Value="{StaticResource HintText}"/>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBox.Style>
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="TextChanged">
                                                                <vmc:EventCommandBase Command="{Binding SerialPortSendCmdChangedEvent}"/>
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </TextBox>
                                                    <TextBlock Text=";" HorizontalAlignment="Left" Margin="242,41,0,0" VerticalAlignment="Top" Width="7"/>
                                                    <TextBlock Text="预览:" HorizontalAlignment="Left" Margin="10,68,0,0" VerticalAlignment="Top" Width="33"/>
                                                    <TextBlock Name="SerialPortSendCmdPreviewTextBlock" Text="{Binding SerialPortSendCmdPreviewText}" HorizontalAlignment="Left" Margin="48,68,0,0" VerticalAlignment="Top" Width="198"/>
                                                </Grid>
                                                <Grid HorizontalAlignment="Left" Width="250" Height="93" VerticalAlignment="Top" Margin="73,10,0,0" Visibility="{Binding ElementName=SerialPortSendCmdIsHexCheckBox, Path=IsChecked, Converter={StaticResource Bool2ControlVisibilityConverter}}">
                                                    <TextBox Text="{Binding SerialPortSendCmdHexText}" Margin="10,10,10,10"/>
                                                </Grid>
                                                <Button Name="SerialPortSendCmdButton" Content="发送命令" HorizontalAlignment="Left" Margin="328,48,0,0" VerticalAlignment="Top" Width="110" Height="46">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <vmc:EventCommandBase Command="{Binding SerialPortSendCmdEvent}"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Button>
                                                <TextBlock Text="接收:" HorizontalAlignment="Left" Margin="10,120,0,0" VerticalAlignment="Top" Width="33"/>
                                                <GroupBox Header="数据类型" HorizontalAlignment="Left" Height="81" Margin="48,122,0,0" VerticalAlignment="Top" Width="390">
                                                    <Grid Name="SerialPortRecvDataTypesGrid">
                                                        <RadioButton Content="Ascii" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" GroupName="SerialPortRecvDataEncodeGroupName" IsChecked="{Binding SerialPortRecvDataEncodeEnum, Converter={StaticResource SerialPortRecvDataEncodeToBoolConverter}, ConverterParameter=0}"/>
                                                        <RadioButton Name="SerialPortRecvDataTypeIsBytesRadioButton" Content="Bytes" HorizontalAlignment="Left" Margin="10,34,0,0" VerticalAlignment="Top" GroupName="SerialPortRecvDataEncodeGroupName" IsChecked="{Binding SerialPortRecvDataEncodeEnum, Converter={StaticResource SerialPortRecvDataEncodeToBoolConverter}, ConverterParameter=1}"/>

                                                        <RadioButton Content="Char" HorizontalAlignment="Left" Margin="110,10,0,0" VerticalAlignment="Top" GroupName="SerialPortRecvDataTypeGroupName" IsChecked="{Binding SerialPortRecvDataTypeEnum, Converter={StaticResource SerialPortRecvDataTypeToBoolConverter}, ConverterParameter=0}"/>
                                                        <RadioButton Content="UInt8" HorizontalAlignment="Left" Margin="174,10,0,0" VerticalAlignment="Top" GroupName="SerialPortRecvDataTypeGroupName" IsChecked="{Binding SerialPortRecvDataTypeEnum, Converter={StaticResource SerialPortRecvDataTypeToBoolConverter}, ConverterParameter=1}"/>
                                                        <RadioButton Content="UInt16" HorizontalAlignment="Left" Margin="241,10,0,0" VerticalAlignment="Top" GroupName="SerialPortRecvDataTypeGroupName" IsChecked="{Binding SerialPortRecvDataTypeEnum, Converter={StaticResource SerialPortRecvDataTypeToBoolConverter}, ConverterParameter=2}"/>
                                                        <RadioButton Content="UInt32" HorizontalAlignment="Left" Margin="313,10,0,0" VerticalAlignment="Top" GroupName="SerialPortRecvDataTypeGroupName" IsChecked="{Binding SerialPortRecvDataTypeEnum, Converter={StaticResource SerialPortRecvDataTypeToBoolConverter}, ConverterParameter=3}"/>
                                                        <CheckBox Name="SerialPortRecvDataTypeIsArrayCheckBox" Content="Array&lt;T&gt;.Count:" HorizontalAlignment="Left" Margin="110,34,0,0" VerticalAlignment="Top" IsChecked="{Binding IsArray}" IsEnabled="{Binding ElementName=SerialPortRecvDataTypeIsBytesRadioButton, Path=IsChecked}"/>
                                                        <TextBox HorizontalAlignment="Left" Height="19" Margin="229,32,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="142" IsEnabled="{Binding ElementName=SerialPortRecvDataTypeIsArrayCheckBox, Path=IsChecked}" Text="{Binding ArrayCount}"/>
                                                    </Grid>
                                                </GroupBox>
                                                <Button Name="SerialPortRecvDataButton" Content="接收数据" HorizontalAlignment="Left" Margin="195,208,0,0" VerticalAlignment="Top" Width="110" Height="32">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <vmc:EventCommandBase Command="{Binding SerialPortRecvDataEvent}"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Button>
                                                <Button Name="SerialPortRecvDataStorageButton" Content="存储数据" HorizontalAlignment="Left" Margin="328,208,0,0" VerticalAlignment="Top" Width="110" Height="32">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Click">
                                                            <vmc:EventCommandBase Command="{Binding SerialPortRecvDataStorageEvent}"/>
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                </Button>
                                                <TextBox Name="SerialPortRecvDataDisplayTextBox" Text="{Binding SerialPortRecvDataDisplayText}" HorizontalAlignment="Left" Height="115" Margin="48,245,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="390"/>
                                                <ComboBox x:Name="SerialPortRecvDataSerialPortNameComboBox" ItemsSource="{Binding SerialPortsInstance.SerialPortsDict, UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Key" SelectedValue="{Binding SerialPortRecvDataSerialPortNameSelectedValue, UpdateSourceTrigger=PropertyChanged}" SelectedValuePath="Key" HorizontalAlignment="Left" Margin="48,212,0,0" VerticalAlignment="Top" Width="120" Height="23"/>
                                            </Grid>
                                        </GroupBox>
                                        <GroupBox Header="存储" HorizontalAlignment="Left" Height="392" Margin="475,10,0,0" VerticalAlignment="Top" Width="350">
                                            <DataGrid Name="SerialPortRecvDataStorageDataGrid" ItemsSource="{Binding DataStorageInstance.DataStorageDictionary[Serial Port Data Storage], UpdateSourceTrigger=PropertyChanged}" AutoGenerateColumns="False" IsReadOnly="True" Height="355" Margin="5,0,5.4,4.6" VerticalAlignment="Bottom">
                                                <DataGrid.Columns>
                                                    <DataGridTextColumn CanUserSort="False" Width="1*" Header="数据" Binding="{Binding Value}"/>
                                                </DataGrid.Columns>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="LoadingRow">
                                                        <vmc:EventCommandBase Command="{Binding DataGridLoadingRowAddRowIndexEvent}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </DataGrid>
                                        </GroupBox>
                                    </Grid>
                                </ad:LayoutAnchorable>
                                <ad:LayoutAnchorable Title="开发测试页" CanHide="False">
                                    <Grid/>
                                </ad:LayoutAnchorable>
                            </ad:LayoutDocumentPane>
                        </ad:LayoutDocumentPaneGroup>
                    </ad:LayoutPanel>
                </ad:LayoutRoot>
            </ad:DockingManager>
        </Grid>
    </DockPanel>
</Window>
